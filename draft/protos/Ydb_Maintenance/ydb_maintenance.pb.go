// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: draft/protos/ydb_maintenance.proto

package Ydb_Maintenance

import (
	Ydb "github.com/ydb-platform/ydb-go-genproto/protos/Ydb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AvailabilityMode int32

const (
	AvailabilityMode_AVAILABILITY_MODE_UNSPECIFIED AvailabilityMode = 0
	// By default CMS tries to guarantee cluster availability
	// by allowing at most 1 disabled disk in each storage group.
	// For compute nodes tenant and cluster policies are followed.
	// In this mode CMS allows at most 1 disable state storage ring
	AvailabilityMode_AVAILABILITY_MODE_STRONG AvailabilityMode = 1
	// In this mode CMS allows (nToSelect - 1) / 2 state storage rings
	AvailabilityMode_AVAILABILITY_MODE_WEAK AvailabilityMode = 2
	// In this mode CMS allows to lock 1 disk in a group, but if it can't
	// it waits for 15 minutes at gives 1 more node.
	AvailabilityMode_AVAILABILITY_MODE_SMART AvailabilityMode = 3
	// In this mode CMS allows at most 1 locked disk in a group
	// ignoring its parity parts count. Allows to restart nodes
	// even if multiple disks of some group are down. Using
	// this mode might cause data unavailability.
	// For compute nodes CMS follows tenant and cluster policies
	// but allows to restart at least one node for tenant or
	// cluster.
	AvailabilityMode_AVAILABILITY_MODE_FORCE AvailabilityMode = 4
)

// Enum value maps for AvailabilityMode.
var (
	AvailabilityMode_name = map[int32]string{
		0: "AVAILABILITY_MODE_UNSPECIFIED",
		1: "AVAILABILITY_MODE_STRONG",
		2: "AVAILABILITY_MODE_WEAK",
		3: "AVAILABILITY_MODE_SMART",
		4: "AVAILABILITY_MODE_FORCE",
	}
	AvailabilityMode_value = map[string]int32{
		"AVAILABILITY_MODE_UNSPECIFIED": 0,
		"AVAILABILITY_MODE_STRONG":      1,
		"AVAILABILITY_MODE_WEAK":        2,
		"AVAILABILITY_MODE_SMART":       3,
		"AVAILABILITY_MODE_FORCE":       4,
	}
)

func (x AvailabilityMode) Enum() *AvailabilityMode {
	p := new(AvailabilityMode)
	*p = x
	return p
}

func (x AvailabilityMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvailabilityMode) Descriptor() protoreflect.EnumDescriptor {
	return file_draft_protos_ydb_maintenance_proto_enumTypes[0].Descriptor()
}

func (AvailabilityMode) Type() protoreflect.EnumType {
	return &file_draft_protos_ydb_maintenance_proto_enumTypes[0]
}

func (x AvailabilityMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvailabilityMode.Descriptor instead.
func (AvailabilityMode) EnumDescriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{0}
}

type ItemState int32

const (
	// Device/node state couldn't be identified.
	ItemState_ITEM_STATE_UNSPECIFIED ItemState = 0
	// Device/node is up.
	ItemState_ITEM_STATE_UP ItemState = 1
	// Device/node is Up, but permission granded
	ItemState_ITEM_STATE_LOCKED ItemState = 2
	// Device/node is down due to planned restart.
	ItemState_ITEM_STATE_RESTART ItemState = 3
	// Device/node is down off-schedule.
	ItemState_ITEM_STATE_DOWN ItemState = 4
)

// Enum value maps for ItemState.
var (
	ItemState_name = map[int32]string{
		0: "ITEM_STATE_UNSPECIFIED",
		1: "ITEM_STATE_UP",
		2: "ITEM_STATE_LOCKED",
		3: "ITEM_STATE_RESTART",
		4: "ITEM_STATE_DOWN",
	}
	ItemState_value = map[string]int32{
		"ITEM_STATE_UNSPECIFIED": 0,
		"ITEM_STATE_UP":          1,
		"ITEM_STATE_LOCKED":      2,
		"ITEM_STATE_RESTART":     3,
		"ITEM_STATE_DOWN":        4,
	}
)

func (x ItemState) Enum() *ItemState {
	p := new(ItemState)
	*p = x
	return p
}

func (x ItemState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemState) Descriptor() protoreflect.EnumDescriptor {
	return file_draft_protos_ydb_maintenance_proto_enumTypes[1].Descriptor()
}

func (ItemState) Type() protoreflect.EnumType {
	return &file_draft_protos_ydb_maintenance_proto_enumTypes[1]
}

func (x ItemState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemState.Descriptor instead.
func (ItemState) EnumDescriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{1}
}

type ActionState_ActionStatus int32

const (
	ActionState_ACTION_STATUS_UNSPECIFIED ActionState_ActionStatus = 0
	ActionState_ACTION_STATUS_CREATED     ActionState_ActionStatus = 1
	ActionState_ACTION_STATUS_WAITING     ActionState_ActionStatus = 2
	ActionState_ACTION_STATUS_PENDING     ActionState_ActionStatus = 3
	// Action has granded permission.
	ActionState_ACTION_STATUS_PERMIT_GRANDED ActionState_ActionStatus = 4
	// Permission withdrawn due to deadline
	ActionState_ACTION_STATUS_TIMEOUT_EXPIRED ActionState_ActionStatus = 5
	// The user marked the action as completed
	ActionState_ACTION_STATUS_FINISHED_BY_USER ActionState_ActionStatus = 6
)

// Enum value maps for ActionState_ActionStatus.
var (
	ActionState_ActionStatus_name = map[int32]string{
		0: "ACTION_STATUS_UNSPECIFIED",
		1: "ACTION_STATUS_CREATED",
		2: "ACTION_STATUS_WAITING",
		3: "ACTION_STATUS_PENDING",
		4: "ACTION_STATUS_PERMIT_GRANDED",
		5: "ACTION_STATUS_TIMEOUT_EXPIRED",
		6: "ACTION_STATUS_FINISHED_BY_USER",
	}
	ActionState_ActionStatus_value = map[string]int32{
		"ACTION_STATUS_UNSPECIFIED":      0,
		"ACTION_STATUS_CREATED":          1,
		"ACTION_STATUS_WAITING":          2,
		"ACTION_STATUS_PENDING":          3,
		"ACTION_STATUS_PERMIT_GRANDED":   4,
		"ACTION_STATUS_TIMEOUT_EXPIRED":  5,
		"ACTION_STATUS_FINISHED_BY_USER": 6,
	}
)

func (x ActionState_ActionStatus) Enum() *ActionState_ActionStatus {
	p := new(ActionState_ActionStatus)
	*p = x
	return p
}

func (x ActionState_ActionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionState_ActionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_draft_protos_ydb_maintenance_proto_enumTypes[2].Descriptor()
}

func (ActionState_ActionStatus) Type() protoreflect.EnumType {
	return &file_draft_protos_ydb_maintenance_proto_enumTypes[2]
}

func (x ActionState_ActionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionState_ActionStatus.Descriptor instead.
func (ActionState_ActionStatus) EnumDescriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{5, 0}
}

// The reason why the state did not update
type ActionState_ActionReason int32

const (
	ActionState_ACTION_REASON_UNSPECIFIED ActionState_ActionReason = 0
	// Action is ok
	ActionState_ACTION_REASON_OK ActionState_ActionReason = 1
	// Affected storage group has too many unavailable (locked or down)
	// vdisks. Can't grant another for this availability mode
	ActionState_ACTION_REASON_TOO_MANY_UNAVAILABLE_VDISKS ActionState_ActionReason = 2
	// Blob storage group is already broken
	ActionState_ACTION_REASON_STORAGE_GROUP_BROKEN ActionState_ActionReason = 3
	// Too many unavailable state storage rings,
	// it is impossible to grant node from another ring
	ActionState_ACTION_REASON_TOO_MANY_UNAVAILABLE_STATE_STORAGE_RINGS ActionState_ActionReason = 4
	// State storage broken. Too many (more than (nToSelect - 1) / 2)
	// unavailable rings
	ActionState_ACTION_REASON_STATE_STORAGE_BROKEN ActionState_ActionReason = 5
	// Issue in cluster disabled nodes limit
	ActionState_ACTION_REASON_DISABLED_NODES_LIMIT_RICHED ActionState_ActionReason = 6
	// Issue in tenant limits
	ActionState_ACTION_REASON_TENANT_DISABLED_NODES_LIMIT_RICHED ActionState_ActionReason = 7
	// Wrong request
	ActionState_ACTION_REASON_WRONG_REQUEST ActionState_ActionReason = 8
)

// Enum value maps for ActionState_ActionReason.
var (
	ActionState_ActionReason_name = map[int32]string{
		0: "ACTION_REASON_UNSPECIFIED",
		1: "ACTION_REASON_OK",
		2: "ACTION_REASON_TOO_MANY_UNAVAILABLE_VDISKS",
		3: "ACTION_REASON_STORAGE_GROUP_BROKEN",
		4: "ACTION_REASON_TOO_MANY_UNAVAILABLE_STATE_STORAGE_RINGS",
		5: "ACTION_REASON_STATE_STORAGE_BROKEN",
		6: "ACTION_REASON_DISABLED_NODES_LIMIT_RICHED",
		7: "ACTION_REASON_TENANT_DISABLED_NODES_LIMIT_RICHED",
		8: "ACTION_REASON_WRONG_REQUEST",
	}
	ActionState_ActionReason_value = map[string]int32{
		"ACTION_REASON_UNSPECIFIED":                              0,
		"ACTION_REASON_OK":                                       1,
		"ACTION_REASON_TOO_MANY_UNAVAILABLE_VDISKS":              2,
		"ACTION_REASON_STORAGE_GROUP_BROKEN":                     3,
		"ACTION_REASON_TOO_MANY_UNAVAILABLE_STATE_STORAGE_RINGS": 4,
		"ACTION_REASON_STATE_STORAGE_BROKEN":                     5,
		"ACTION_REASON_DISABLED_NODES_LIMIT_RICHED":              6,
		"ACTION_REASON_TENANT_DISABLED_NODES_LIMIT_RICHED":       7,
		"ACTION_REASON_WRONG_REQUEST":                            8,
	}
)

func (x ActionState_ActionReason) Enum() *ActionState_ActionReason {
	p := new(ActionState_ActionReason)
	*p = x
	return p
}

func (x ActionState_ActionReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionState_ActionReason) Descriptor() protoreflect.EnumDescriptor {
	return file_draft_protos_ydb_maintenance_proto_enumTypes[3].Descriptor()
}

func (ActionState_ActionReason) Type() protoreflect.EnumType {
	return &file_draft_protos_ydb_maintenance_proto_enumTypes[3]
}

func (x ActionState_ActionReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionState_ActionReason.Descriptor instead.
func (ActionState_ActionReason) EnumDescriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{5, 1}
}

// Used to describe the scope of a single action
type ActionScope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Scope:
	//
	//	*ActionScope_PdiskId
	//	*ActionScope_NodeId
	//	*ActionScope_HostName
	Scope isActionScope_Scope `protobuf_oneof:"scope"`
}

func (x *ActionScope) Reset() {
	*x = ActionScope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionScope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionScope) ProtoMessage() {}

func (x *ActionScope) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionScope.ProtoReflect.Descriptor instead.
func (*ActionScope) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{0}
}

func (m *ActionScope) GetScope() isActionScope_Scope {
	if m != nil {
		return m.Scope
	}
	return nil
}

func (x *ActionScope) GetPdiskId() *ActionScope_PDiskId {
	if x, ok := x.GetScope().(*ActionScope_PdiskId); ok {
		return x.PdiskId
	}
	return nil
}

func (x *ActionScope) GetNodeId() uint32 {
	if x, ok := x.GetScope().(*ActionScope_NodeId); ok {
		return x.NodeId
	}
	return 0
}

func (x *ActionScope) GetHostName() string {
	if x, ok := x.GetScope().(*ActionScope_HostName); ok {
		return x.HostName
	}
	return ""
}

type isActionScope_Scope interface {
	isActionScope_Scope()
}

type ActionScope_PdiskId struct {
	PdiskId *ActionScope_PDiskId `protobuf:"bytes,1,opt,name=pdisk_id,json=pdiskId,proto3,oneof"`
}

type ActionScope_NodeId struct {
	NodeId uint32 `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3,oneof"`
}

type ActionScope_HostName struct {
	HostName string `protobuf:"bytes,3,opt,name=host_name,json=hostName,proto3,oneof"`
}

func (*ActionScope_PdiskId) isActionScope_Scope() {}

func (*ActionScope_NodeId) isActionScope_Scope() {}

func (*ActionScope_HostName) isActionScope_Scope() {}

// Taking an exclusive lock to perform maintenance
type LockAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionScope *ActionScope         `protobuf:"bytes,1,opt,name=action_scope,json=actionScope,proto3" json:"action_scope,omitempty"`
	Duration    *durationpb.Duration `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *LockAction) Reset() {
	*x = LockAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockAction) ProtoMessage() {}

func (x *LockAction) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockAction.ProtoReflect.Descriptor instead.
func (*LockAction) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{1}
}

func (x *LockAction) GetActionScope() *ActionScope {
	if x != nil {
		return x.ActionScope
	}
	return nil
}

func (x *LockAction) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

// Will not be implemented in the 1st version
// Switching to maintenance mode. Maintenance modes
// can overlap with each other
type SetMaintenanceModeAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionScope  *ActionScope         `protobuf:"bytes,1,opt,name=action_scope,json=actionScope,proto3" json:"action_scope,omitempty"`
	DrainTablets bool                 `protobuf:"varint,2,opt,name=drain_tablets,json=drainTablets,proto3" json:"drain_tablets,omitempty"`
	EvictVdisks  bool                 `protobuf:"varint,3,opt,name=evict_vdisks,json=evictVdisks,proto3" json:"evict_vdisks,omitempty"`
	Duration     *durationpb.Duration `protobuf:"bytes,4,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *SetMaintenanceModeAction) Reset() {
	*x = SetMaintenanceModeAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMaintenanceModeAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMaintenanceModeAction) ProtoMessage() {}

func (x *SetMaintenanceModeAction) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMaintenanceModeAction.ProtoReflect.Descriptor instead.
func (*SetMaintenanceModeAction) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{2}
}

func (x *SetMaintenanceModeAction) GetActionScope() *ActionScope {
	if x != nil {
		return x.ActionScope
	}
	return nil
}

func (x *SetMaintenanceModeAction) GetDrainTablets() bool {
	if x != nil {
		return x.DrainTablets
	}
	return false
}

func (x *SetMaintenanceModeAction) GetEvictVdisks() bool {
	if x != nil {
		return x.EvictVdisks
	}
	return false
}

func (x *SetMaintenanceModeAction) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//
	//	*Action_LockAction
	//	*Action_SetMaintainanceModeAction
	Action isAction_Action `protobuf_oneof:"action"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{3}
}

func (m *Action) GetAction() isAction_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *Action) GetLockAction() *LockAction {
	if x, ok := x.GetAction().(*Action_LockAction); ok {
		return x.LockAction
	}
	return nil
}

func (x *Action) GetSetMaintainanceModeAction() *SetMaintenanceModeAction {
	if x, ok := x.GetAction().(*Action_SetMaintainanceModeAction); ok {
		return x.SetMaintainanceModeAction
	}
	return nil
}

type isAction_Action interface {
	isAction_Action()
}

type Action_LockAction struct {
	LockAction *LockAction `protobuf:"bytes,1,opt,name=lock_action,json=lockAction,proto3,oneof"`
}

type Action_SetMaintainanceModeAction struct {
	SetMaintainanceModeAction *SetMaintenanceModeAction `protobuf:"bytes,2,opt,name=set_maintainance_mode_action,json=setMaintainanceModeAction,proto3,oneof"`
}

func (*Action_LockAction) isAction_Action() {}

func (*Action_SetMaintainanceModeAction) isAction_Action() {}

type ActionUid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskUid string `protobuf:"bytes,1,opt,name=task_uid,json=taskUid,proto3" json:"task_uid,omitempty"`
	// Unique id within a single task. Defined by cms
	GroupId  uint32 `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	ActionId uint32 `protobuf:"varint,3,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
}

func (x *ActionUid) Reset() {
	*x = ActionUid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionUid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionUid) ProtoMessage() {}

func (x *ActionUid) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionUid.ProtoReflect.Descriptor instead.
func (*ActionUid) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{4}
}

func (x *ActionUid) GetTaskUid() string {
	if x != nil {
		return x.TaskUid
	}
	return ""
}

func (x *ActionUid) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ActionUid) GetActionId() uint32 {
	if x != nil {
		return x.ActionId
	}
	return 0
}

type ActionState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action    *Action                  `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Status    ActionState_ActionStatus `protobuf:"varint,2,opt,name=status,proto3,enum=Ydb.Maintenance.ActionState_ActionStatus" json:"status,omitempty"`
	ActionUid *ActionUid               `protobuf:"bytes,3,opt,name=action_uid,json=actionUid,proto3" json:"action_uid,omitempty"`
	Reason    ActionState_ActionReason `protobuf:"varint,4,opt,name=reason,proto3,enum=Ydb.Maintenance.ActionState_ActionReason" json:"reason,omitempty"`
	// The time when the state was assigned
	StateTimestamp *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=state_timestamp,json=stateTimestamp,proto3" json:"state_timestamp,omitempty"`
	// Fields specified for PERMISSION_GRANDED state
	Deadline *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=deadline,proto3" json:"deadline,omitempty"`
}

func (x *ActionState) Reset() {
	*x = ActionState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionState) ProtoMessage() {}

func (x *ActionState) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionState.ProtoReflect.Descriptor instead.
func (*ActionState) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{5}
}

func (x *ActionState) GetAction() *Action {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *ActionState) GetStatus() ActionState_ActionStatus {
	if x != nil {
		return x.Status
	}
	return ActionState_ACTION_STATUS_UNSPECIFIED
}

func (x *ActionState) GetActionUid() *ActionUid {
	if x != nil {
		return x.ActionUid
	}
	return nil
}

func (x *ActionState) GetReason() ActionState_ActionReason {
	if x != nil {
		return x.Reason
	}
	return ActionState_ACTION_REASON_UNSPECIFIED
}

func (x *ActionState) GetStateTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.StateTimestamp
	}
	return nil
}

func (x *ActionState) GetDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

type ActionGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actions []*Action `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *ActionGroup) Reset() {
	*x = ActionGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionGroup) ProtoMessage() {}

func (x *ActionGroup) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionGroup.ProtoReflect.Descriptor instead.
func (*ActionGroup) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{6}
}

func (x *ActionGroup) GetActions() []*Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

type ActionGroupStates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionStates []*ActionState `protobuf:"bytes,1,rep,name=action_states,json=actionStates,proto3" json:"action_states,omitempty"`
}

func (x *ActionGroupStates) Reset() {
	*x = ActionGroupStates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionGroupStates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionGroupStates) ProtoMessage() {}

func (x *ActionGroupStates) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionGroupStates.ProtoReflect.Descriptor instead.
func (*ActionGroupStates) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{7}
}

func (x *ActionGroupStates) GetActionStates() []*ActionState {
	if x != nil {
		return x.ActionStates
	}
	return nil
}

type ListClusterNodesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListClusterNodesRequest) Reset() {
	*x = ListClusterNodesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClusterNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterNodesRequest) ProtoMessage() {}

func (x *ListClusterNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterNodesRequest.ProtoReflect.Descriptor instead.
func (*ListClusterNodesRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{8}
}

type ListClusterNodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*ListClusterNodesResponse_Node `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *ListClusterNodesResponse) Reset() {
	*x = ListClusterNodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClusterNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterNodesResponse) ProtoMessage() {}

func (x *ListClusterNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterNodesResponse.ProtoReflect.Descriptor instead.
func (*ListClusterNodesResponse) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{9}
}

func (x *ListClusterNodesResponse) GetNodes() []*ListClusterNodesResponse_Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type ListNodesDevicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId []uint32 `protobuf:"varint,1,rep,packed,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *ListNodesDevicesRequest) Reset() {
	*x = ListNodesDevicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNodesDevicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesDevicesRequest) ProtoMessage() {}

func (x *ListNodesDevicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesDevicesRequest.ProtoReflect.Descriptor instead.
func (*ListNodesDevicesRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{10}
}

func (x *ListNodesDevicesRequest) GetNodeId() []uint32 {
	if x != nil {
		return x.NodeId
	}
	return nil
}

type ListNodesDevicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodesDevices []*ListNodesDevicesResponse_NodeDevices `protobuf:"bytes,1,rep,name=nodes_devices,json=nodesDevices,proto3" json:"nodes_devices,omitempty"`
}

func (x *ListNodesDevicesResponse) Reset() {
	*x = ListNodesDevicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNodesDevicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesDevicesResponse) ProtoMessage() {}

func (x *ListNodesDevicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesDevicesResponse.ProtoReflect.Descriptor instead.
func (*ListNodesDevicesResponse) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{11}
}

func (x *ListNodesDevicesResponse) GetNodesDevices() []*ListNodesDevicesResponse_NodeDevices {
	if x != nil {
		return x.NodesDevices
	}
	return nil
}

type MaintenanceTaskOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The maximum number of action groups in progress at a time
	InFlight uint32 `protobuf:"varint,1,opt,name=in_flight,json=inFlight,proto3" json:"in_flight,omitempty"`
	DryRun   bool   `protobuf:"varint,2,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
	// Name of a task and some comment.
	// Provided for the convenience of the user.
	Name    string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Comment string `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	// Availability mode is not preserved for scheduled events.
	AvailabilityMode AvailabilityMode `protobuf:"varint,5,opt,name=availability_mode,json=availabilityMode,proto3,enum=Ydb.Maintenance.AvailabilityMode" json:"availability_mode,omitempty"`
	// User defined GUID
	TaskUid string `protobuf:"bytes,6,opt,name=task_uid,json=taskUid,proto3" json:"task_uid,omitempty"`
	// Task with largest priority blocks other tasks
	// until all actions are completed. Default is 0
	Priority int64 `protobuf:"varint,7,opt,name=priority,proto3" json:"priority,omitempty"`
}

func (x *MaintenanceTaskOptions) Reset() {
	*x = MaintenanceTaskOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaintenanceTaskOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaintenanceTaskOptions) ProtoMessage() {}

func (x *MaintenanceTaskOptions) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaintenanceTaskOptions.ProtoReflect.Descriptor instead.
func (*MaintenanceTaskOptions) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{12}
}

func (x *MaintenanceTaskOptions) GetInFlight() uint32 {
	if x != nil {
		return x.InFlight
	}
	return 0
}

func (x *MaintenanceTaskOptions) GetDryRun() bool {
	if x != nil {
		return x.DryRun
	}
	return false
}

func (x *MaintenanceTaskOptions) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MaintenanceTaskOptions) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *MaintenanceTaskOptions) GetAvailabilityMode() AvailabilityMode {
	if x != nil {
		return x.AvailabilityMode
	}
	return AvailabilityMode_AVAILABILITY_MODE_UNSPECIFIED
}

func (x *MaintenanceTaskOptions) GetTaskUid() string {
	if x != nil {
		return x.TaskUid
	}
	return ""
}

func (x *MaintenanceTaskOptions) GetPriority() int64 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type CreateMaintenanceTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskOptions  *MaintenanceTaskOptions `protobuf:"bytes,1,opt,name=task_options,json=taskOptions,proto3" json:"task_options,omitempty"`
	ActionGroups []*ActionGroup          `protobuf:"bytes,2,rep,name=action_groups,json=actionGroups,proto3" json:"action_groups,omitempty"`
	// Indicates that client is no longer interested in the task after
	// the specified duration starting from the time task arrives at the cms.
	// If not specified then default duration from CMS config is used.
	TaskTimeout *durationpb.Duration `protobuf:"bytes,5,opt,name=task_timeout,json=taskTimeout,proto3" json:"task_timeout,omitempty"`
}

func (x *CreateMaintenanceTaskRequest) Reset() {
	*x = CreateMaintenanceTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMaintenanceTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMaintenanceTaskRequest) ProtoMessage() {}

func (x *CreateMaintenanceTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMaintenanceTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateMaintenanceTaskRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{13}
}

func (x *CreateMaintenanceTaskRequest) GetTaskOptions() *MaintenanceTaskOptions {
	if x != nil {
		return x.TaskOptions
	}
	return nil
}

func (x *CreateMaintenanceTaskRequest) GetActionGroups() []*ActionGroup {
	if x != nil {
		return x.ActionGroups
	}
	return nil
}

func (x *CreateMaintenanceTaskRequest) GetTaskTimeout() *durationpb.Duration {
	if x != nil {
		return x.TaskTimeout
	}
	return nil
}

// Updated action states and tryes to grand permissions
type RefreshMaintenanceTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskUid string `protobuf:"bytes,2,opt,name=task_uid,json=taskUid,proto3" json:"task_uid,omitempty"`
}

func (x *RefreshMaintenanceTaskRequest) Reset() {
	*x = RefreshMaintenanceTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshMaintenanceTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshMaintenanceTaskRequest) ProtoMessage() {}

func (x *RefreshMaintenanceTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshMaintenanceTaskRequest.ProtoReflect.Descriptor instead.
func (*RefreshMaintenanceTaskRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{14}
}

func (x *RefreshMaintenanceTaskRequest) GetTaskUid() string {
	if x != nil {
		return x.TaskUid
	}
	return ""
}

type MaintenanceTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status        Ydb.StatusIds_StatusCode `protobuf:"varint,1,opt,name=status,proto3,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	TaskUid       string                   `protobuf:"bytes,2,opt,name=task_uid,json=taskUid,proto3" json:"task_uid,omitempty"`
	ActionsStates []*ActionGroupStates     `protobuf:"bytes,3,rep,name=actions_states,json=actionsStates,proto3" json:"actions_states,omitempty"`
	// Try again after this deadline. Specified if there are no
	// PERMISSION_GRANDED actions after request
	Deadline *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=deadline,proto3" json:"deadline,omitempty"`
}

func (x *MaintenanceTaskResponse) Reset() {
	*x = MaintenanceTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaintenanceTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaintenanceTaskResponse) ProtoMessage() {}

func (x *MaintenanceTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaintenanceTaskResponse.ProtoReflect.Descriptor instead.
func (*MaintenanceTaskResponse) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{15}
}

func (x *MaintenanceTaskResponse) GetStatus() Ydb.StatusIds_StatusCode {
	if x != nil {
		return x.Status
	}
	return Ydb.StatusIds_StatusCode(0)
}

func (x *MaintenanceTaskResponse) GetTaskUid() string {
	if x != nil {
		return x.TaskUid
	}
	return ""
}

func (x *MaintenanceTaskResponse) GetActionsStates() []*ActionGroupStates {
	if x != nil {
		return x.ActionsStates
	}
	return nil
}

func (x *MaintenanceTaskResponse) GetDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

type ListMaintenanceTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If specified, it will return the tasks created by this user.
	// Otherwise all tasks will be returned
	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *ListMaintenanceTasksRequest) Reset() {
	*x = ListMaintenanceTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMaintenanceTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMaintenanceTasksRequest) ProtoMessage() {}

func (x *ListMaintenanceTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMaintenanceTasksRequest.ProtoReflect.Descriptor instead.
func (*ListMaintenanceTasksRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{16}
}

func (x *ListMaintenanceTasksRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type ListMaintenanceTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TasksUids []string `protobuf:"bytes,1,rep,name=tasks_uids,json=tasksUids,proto3" json:"tasks_uids,omitempty"`
}

func (x *ListMaintenanceTasksResponse) Reset() {
	*x = ListMaintenanceTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMaintenanceTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMaintenanceTasksResponse) ProtoMessage() {}

func (x *ListMaintenanceTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMaintenanceTasksResponse.ProtoReflect.Descriptor instead.
func (*ListMaintenanceTasksResponse) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{17}
}

func (x *ListMaintenanceTasksResponse) GetTasksUids() []string {
	if x != nil {
		return x.TasksUids
	}
	return nil
}

// Returns specified task
type GetMaintenanceTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskUid string `protobuf:"bytes,1,opt,name=task_uid,json=taskUid,proto3" json:"task_uid,omitempty"`
}

func (x *GetMaintenanceTaskRequest) Reset() {
	*x = GetMaintenanceTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMaintenanceTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMaintenanceTaskRequest) ProtoMessage() {}

func (x *GetMaintenanceTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMaintenanceTaskRequest.ProtoReflect.Descriptor instead.
func (*GetMaintenanceTaskRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{18}
}

func (x *GetMaintenanceTaskRequest) GetTaskUid() string {
	if x != nil {
		return x.TaskUid
	}
	return ""
}

type GetMaintenanceTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskOptions        *MaintenanceTaskOptions `protobuf:"bytes,1,opt,name=task_options,json=taskOptions,proto3" json:"task_options,omitempty"`
	ActionsGroupStates []*ActionGroupStates    `protobuf:"bytes,2,rep,name=actions_group_states,json=actionsGroupStates,proto3" json:"actions_group_states,omitempty"`
	TaskDeadline       *timestamppb.Timestamp  `protobuf:"bytes,3,opt,name=task_deadline,json=taskDeadline,proto3" json:"task_deadline,omitempty"`
}

func (x *GetMaintenanceTaskResponse) Reset() {
	*x = GetMaintenanceTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMaintenanceTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMaintenanceTaskResponse) ProtoMessage() {}

func (x *GetMaintenanceTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMaintenanceTaskResponse.ProtoReflect.Descriptor instead.
func (*GetMaintenanceTaskResponse) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{19}
}

func (x *GetMaintenanceTaskResponse) GetTaskOptions() *MaintenanceTaskOptions {
	if x != nil {
		return x.TaskOptions
	}
	return nil
}

func (x *GetMaintenanceTaskResponse) GetActionsGroupStates() []*ActionGroupStates {
	if x != nil {
		return x.ActionsGroupStates
	}
	return nil
}

func (x *GetMaintenanceTaskResponse) GetTaskDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.TaskDeadline
	}
	return nil
}

// Drop maintenance task
type DropMaintenanceTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskUid string `protobuf:"bytes,1,opt,name=task_uid,json=taskUid,proto3" json:"task_uid,omitempty"`
}

func (x *DropMaintenanceTaskRequest) Reset() {
	*x = DropMaintenanceTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropMaintenanceTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropMaintenanceTaskRequest) ProtoMessage() {}

func (x *DropMaintenanceTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropMaintenanceTaskRequest.ProtoReflect.Descriptor instead.
func (*DropMaintenanceTaskRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{20}
}

func (x *DropMaintenanceTaskRequest) GetTaskUid() string {
	if x != nil {
		return x.TaskUid
	}
	return ""
}

// Extends Request deadline
type ProlongateMaintenanceTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskUid     string                 `protobuf:"bytes,1,opt,name=task_uid,json=taskUid,proto3" json:"task_uid,omitempty"`
	NewDeadline *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=new_deadline,json=newDeadline,proto3" json:"new_deadline,omitempty"`
}

func (x *ProlongateMaintenanceTaskRequest) Reset() {
	*x = ProlongateMaintenanceTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProlongateMaintenanceTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProlongateMaintenanceTaskRequest) ProtoMessage() {}

func (x *ProlongateMaintenanceTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProlongateMaintenanceTaskRequest.ProtoReflect.Descriptor instead.
func (*ProlongateMaintenanceTaskRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{21}
}

func (x *ProlongateMaintenanceTaskRequest) GetTaskUid() string {
	if x != nil {
		return x.TaskUid
	}
	return ""
}

func (x *ProlongateMaintenanceTaskRequest) GetNewDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.NewDeadline
	}
	return nil
}

type ManageMaintenanceTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Ydb.StatusIds_StatusCode `protobuf:"varint,1,opt,name=status,proto3,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
}

func (x *ManageMaintenanceTaskResponse) Reset() {
	*x = ManageMaintenanceTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageMaintenanceTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageMaintenanceTaskResponse) ProtoMessage() {}

func (x *ManageMaintenanceTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageMaintenanceTaskResponse.ProtoReflect.Descriptor instead.
func (*ManageMaintenanceTaskResponse) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{22}
}

func (x *ManageMaintenanceTaskResponse) GetStatus() Ydb.StatusIds_StatusCode {
	if x != nil {
		return x.Status
	}
	return Ydb.StatusIds_StatusCode(0)
}

// Removes resolved premits
type ReleasePermitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionUid []*ActionUid `protobuf:"bytes,1,rep,name=action_uid,json=actionUid,proto3" json:"action_uid,omitempty"`
}

func (x *ReleasePermitRequest) Reset() {
	*x = ReleasePermitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleasePermitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleasePermitRequest) ProtoMessage() {}

func (x *ReleasePermitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleasePermitRequest.ProtoReflect.Descriptor instead.
func (*ReleasePermitRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{23}
}

func (x *ReleasePermitRequest) GetActionUid() []*ActionUid {
	if x != nil {
		return x.ActionUid
	}
	return nil
}

// Extends permits deadlines
type ProlongatePermitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionDurations []*ProlongatePermitRequest_ActionDuration `protobuf:"bytes,1,rep,name=action_durations,json=actionDurations,proto3" json:"action_durations,omitempty"`
}

func (x *ProlongatePermitRequest) Reset() {
	*x = ProlongatePermitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProlongatePermitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProlongatePermitRequest) ProtoMessage() {}

func (x *ProlongatePermitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProlongatePermitRequest.ProtoReflect.Descriptor instead.
func (*ProlongatePermitRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{24}
}

func (x *ProlongatePermitRequest) GetActionDurations() []*ProlongatePermitRequest_ActionDuration {
	if x != nil {
		return x.ActionDurations
	}
	return nil
}

type PermitStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionUid *ActionUid               `protobuf:"bytes,1,opt,name=action_uid,json=actionUid,proto3" json:"action_uid,omitempty"`
	Status    Ydb.StatusIds_StatusCode `protobuf:"varint,2,opt,name=status,proto3,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
}

func (x *PermitStatus) Reset() {
	*x = PermitStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermitStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermitStatus) ProtoMessage() {}

func (x *PermitStatus) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermitStatus.ProtoReflect.Descriptor instead.
func (*PermitStatus) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{25}
}

func (x *PermitStatus) GetActionUid() *ActionUid {
	if x != nil {
		return x.ActionUid
	}
	return nil
}

func (x *PermitStatus) GetStatus() Ydb.StatusIds_StatusCode {
	if x != nil {
		return x.Status
	}
	return Ydb.StatusIds_StatusCode(0)
}

type ManagePermitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PermitStatuses []*PermitStatus `protobuf:"bytes,1,rep,name=permit_statuses,json=permitStatuses,proto3" json:"permit_statuses,omitempty"`
}

func (x *ManagePermitResponse) Reset() {
	*x = ManagePermitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManagePermitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagePermitResponse) ProtoMessage() {}

func (x *ManagePermitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagePermitResponse.ProtoReflect.Descriptor instead.
func (*ManagePermitResponse) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{26}
}

func (x *ManagePermitResponse) GetPermitStatuses() []*PermitStatus {
	if x != nil {
		return x.PermitStatuses
	}
	return nil
}

// Getting a detailed reason why the action doesn't get a permit
type GetReadableActionReasonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionIds []*ActionUid `protobuf:"bytes,1,rep,name=action_ids,json=actionIds,proto3" json:"action_ids,omitempty"`
}

func (x *GetReadableActionReasonRequest) Reset() {
	*x = GetReadableActionReasonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReadableActionReasonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReadableActionReasonRequest) ProtoMessage() {}

func (x *GetReadableActionReasonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReadableActionReasonRequest.ProtoReflect.Descriptor instead.
func (*GetReadableActionReasonRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{27}
}

func (x *GetReadableActionReasonRequest) GetActionIds() []*ActionUid {
	if x != nil {
		return x.ActionIds
	}
	return nil
}

type GetReadableActionReasonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reasons []*GetReadableActionReasonResponse_Reason `protobuf:"bytes,1,rep,name=reasons,proto3" json:"reasons,omitempty"`
}

func (x *GetReadableActionReasonResponse) Reset() {
	*x = GetReadableActionReasonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReadableActionReasonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReadableActionReasonResponse) ProtoMessage() {}

func (x *GetReadableActionReasonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReadableActionReasonResponse.ProtoReflect.Descriptor instead.
func (*GetReadableActionReasonResponse) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{28}
}

func (x *GetReadableActionReasonResponse) GetReasons() []*GetReadableActionReasonResponse_Reason {
	if x != nil {
		return x.Reasons
	}
	return nil
}

type ActionScope_PDiskId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId  uint32 `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	PdiskId uint32 `protobuf:"varint,2,opt,name=pdisk_id,json=pdiskId,proto3" json:"pdisk_id,omitempty"`
}

func (x *ActionScope_PDiskId) Reset() {
	*x = ActionScope_PDiskId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionScope_PDiskId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionScope_PDiskId) ProtoMessage() {}

func (x *ActionScope_PDiskId) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionScope_PDiskId.ProtoReflect.Descriptor instead.
func (*ActionScope_PDiskId) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ActionScope_PDiskId) GetNodeId() uint32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *ActionScope_PDiskId) GetPdiskId() uint32 {
	if x != nil {
		return x.PdiskId
	}
	return 0
}

type ListClusterNodesResponse_Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId           uint32    `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	DataCenter       string    `protobuf:"bytes,2,opt,name=data_center,json=dataCenter,proto3" json:"data_center,omitempty"`
	Rack             string    `protobuf:"bytes,3,opt,name=rack,proto3" json:"rack,omitempty"`
	Fqdn             string    `protobuf:"bytes,4,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	InterconnectPort uint32    `protobuf:"varint,5,opt,name=interconnect_port,json=interconnectPort,proto3" json:"interconnect_port,omitempty"`
	State            ItemState `protobuf:"varint,6,opt,name=state,proto3,enum=Ydb.Maintenance.ItemState" json:"state,omitempty"`
	Tenant           string    `protobuf:"bytes,7,opt,name=tenant,proto3" json:"tenant,omitempty"`
	IsStorage        bool      `protobuf:"varint,8,opt,name=is_storage,json=isStorage,proto3" json:"is_storage,omitempty"`
	IsDynamic        bool      `protobuf:"varint,9,opt,name=is_dynamic,json=isDynamic,proto3" json:"is_dynamic,omitempty"`
}

func (x *ListClusterNodesResponse_Node) Reset() {
	*x = ListClusterNodesResponse_Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClusterNodesResponse_Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterNodesResponse_Node) ProtoMessage() {}

func (x *ListClusterNodesResponse_Node) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterNodesResponse_Node.ProtoReflect.Descriptor instead.
func (*ListClusterNodesResponse_Node) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{9, 0}
}

func (x *ListClusterNodesResponse_Node) GetNodeId() uint32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *ListClusterNodesResponse_Node) GetDataCenter() string {
	if x != nil {
		return x.DataCenter
	}
	return ""
}

func (x *ListClusterNodesResponse_Node) GetRack() string {
	if x != nil {
		return x.Rack
	}
	return ""
}

func (x *ListClusterNodesResponse_Node) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

func (x *ListClusterNodesResponse_Node) GetInterconnectPort() uint32 {
	if x != nil {
		return x.InterconnectPort
	}
	return 0
}

func (x *ListClusterNodesResponse_Node) GetState() ItemState {
	if x != nil {
		return x.State
	}
	return ItemState_ITEM_STATE_UNSPECIFIED
}

func (x *ListClusterNodesResponse_Node) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *ListClusterNodesResponse_Node) GetIsStorage() bool {
	if x != nil {
		return x.IsStorage
	}
	return false
}

func (x *ListClusterNodesResponse_Node) GetIsDynamic() bool {
	if x != nil {
		return x.IsDynamic
	}
	return false
}

type ListNodesDevicesResponse_Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	State ItemState `protobuf:"varint,2,opt,name=state,proto3,enum=Ydb.Maintenance.ItemState" json:"state,omitempty"`
}

func (x *ListNodesDevicesResponse_Device) Reset() {
	*x = ListNodesDevicesResponse_Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNodesDevicesResponse_Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesDevicesResponse_Device) ProtoMessage() {}

func (x *ListNodesDevicesResponse_Device) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesDevicesResponse_Device.ProtoReflect.Descriptor instead.
func (*ListNodesDevicesResponse_Device) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{11, 0}
}

func (x *ListNodesDevicesResponse_Device) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListNodesDevicesResponse_Device) GetState() ItemState {
	if x != nil {
		return x.State
	}
	return ItemState_ITEM_STATE_UNSPECIFIED
}

type ListNodesDevicesResponse_NodeDevices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId  uint32                             `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Devices []*ListNodesDevicesResponse_Device `protobuf:"bytes,2,rep,name=devices,proto3" json:"devices,omitempty"`
}

func (x *ListNodesDevicesResponse_NodeDevices) Reset() {
	*x = ListNodesDevicesResponse_NodeDevices{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNodesDevicesResponse_NodeDevices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesDevicesResponse_NodeDevices) ProtoMessage() {}

func (x *ListNodesDevicesResponse_NodeDevices) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesDevicesResponse_NodeDevices.ProtoReflect.Descriptor instead.
func (*ListNodesDevicesResponse_NodeDevices) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{11, 1}
}

func (x *ListNodesDevicesResponse_NodeDevices) GetNodeId() uint32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *ListNodesDevicesResponse_NodeDevices) GetDevices() []*ListNodesDevicesResponse_Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

type ProlongatePermitRequest_ActionDuration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionUid   *ActionUid             `protobuf:"bytes,1,opt,name=action_uid,json=actionUid,proto3" json:"action_uid,omitempty"`
	NewDeadline *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=new_deadline,json=newDeadline,proto3" json:"new_deadline,omitempty"`
}

func (x *ProlongatePermitRequest_ActionDuration) Reset() {
	*x = ProlongatePermitRequest_ActionDuration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProlongatePermitRequest_ActionDuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProlongatePermitRequest_ActionDuration) ProtoMessage() {}

func (x *ProlongatePermitRequest_ActionDuration) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProlongatePermitRequest_ActionDuration.ProtoReflect.Descriptor instead.
func (*ProlongatePermitRequest_ActionDuration) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{24, 0}
}

func (x *ProlongatePermitRequest_ActionDuration) GetActionUid() *ActionUid {
	if x != nil {
		return x.ActionUid
	}
	return nil
}

func (x *ProlongatePermitRequest_ActionDuration) GetNewDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.NewDeadline
	}
	return nil
}

type GetReadableActionReasonResponse_Reason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionState *ActionState `protobuf:"bytes,1,opt,name=action_state,json=actionState,proto3" json:"action_state,omitempty"`
	Reason      string       `protobuf:"bytes,2,opt,name=Reason,proto3" json:"Reason,omitempty"`
}

func (x *GetReadableActionReasonResponse_Reason) Reset() {
	*x = GetReadableActionReasonResponse_Reason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReadableActionReasonResponse_Reason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReadableActionReasonResponse_Reason) ProtoMessage() {}

func (x *GetReadableActionReasonResponse_Reason) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_maintenance_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReadableActionReasonResponse_Reason.ProtoReflect.Descriptor instead.
func (*GetReadableActionReasonResponse_Reason) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_maintenance_proto_rawDescGZIP(), []int{28, 0}
}

func (x *GetReadableActionReasonResponse_Reason) GetActionState() *ActionState {
	if x != nil {
		return x.ActionState
	}
	return nil
}

func (x *GetReadableActionReasonResponse_Reason) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_draft_protos_ydb_maintenance_proto protoreflect.FileDescriptor

var file_draft_protos_ydb_maintenance_proto_rawDesc = []byte{
	0x0a, 0x22, 0x64, 0x72, 0x61, 0x66, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x79,
	0x64, 0x62, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x59, 0x64, 0x62, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x79, 0x64,
	0x62, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd2, 0x01, 0x0a, 0x0b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x70, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4d, 0x61,
	0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x2e, 0x50, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x48, 0x00, 0x52,
	0x07, 0x70, 0x64, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x1a, 0x3d, 0x0a, 0x07, 0x50, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x64, 0x69, 0x73, 0x6b, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x64, 0x69, 0x73, 0x6b, 0x49,
	0x64, 0x42, 0x07, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x0a, 0x4c,
	0x6f, 0x63, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0c, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x0b, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xda, 0x01, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f,
	0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x6f,
	0x70, 0x65, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x64, 0x72, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x64, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x76, 0x69, 0x63, 0x74, 0x5f, 0x76, 0x64,
	0x69, 0x73, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x65, 0x76, 0x69, 0x63,
	0x74, 0x56, 0x64, 0x69, 0x73, 0x6b, 0x73, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc0,
	0x01, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x0b, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x6c,
	0x6f, 0x63, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6c, 0x0a, 0x1c, 0x73, 0x65, 0x74,
	0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x19, 0x73, 0x65,
	0x74, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x5e, 0x0a, 0x09, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x69, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x55, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0xed, 0x07, 0x0a, 0x0b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x2f, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x29, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x59, 0x64, 0x62, 0x2e,
	0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x69, 0x64, 0x52, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x69, 0x64,
	0x12, 0x41, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x29, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65,
	0x22, 0xe7, 0x01, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1d, 0x0a, 0x19, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x19, 0x0a, 0x15, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x57, 0x41, 0x49,
	0x54, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10,
	0x03, 0x12, 0x20, 0x0a, 0x1c, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x54, 0x5f, 0x47, 0x52, 0x41, 0x4e, 0x44, 0x45,
	0x44, 0x10, 0x04, 0x12, 0x21, 0x0a, 0x1d, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x5f, 0x45, 0x58, 0x50,
	0x49, 0x52, 0x45, 0x44, 0x10, 0x05, 0x12, 0x22, 0x0a, 0x1e, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44,
	0x5f, 0x42, 0x59, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x06, 0x22, 0x84, 0x03, 0x0a, 0x0c, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x19, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x4f, 0x4b, 0x10, 0x01,
	0x12, 0x2d, 0x0a, 0x29, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f,
	0x4e, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x4d, 0x41, 0x4e, 0x59, 0x5f, 0x55, 0x4e, 0x41, 0x56, 0x41,
	0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x56, 0x44, 0x49, 0x53, 0x4b, 0x53, 0x10, 0x02, 0x12,
	0x26, 0x0a, 0x22, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e,
	0x5f, 0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x42,
	0x52, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x03, 0x12, 0x3a, 0x0a, 0x36, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x4d, 0x41, 0x4e,
	0x59, 0x5f, 0x55, 0x4e, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x5f, 0x52, 0x49, 0x4e, 0x47,
	0x53, 0x10, 0x04, 0x12, 0x26, 0x0a, 0x22, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45,
	0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x41,
	0x47, 0x45, 0x5f, 0x42, 0x52, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x05, 0x12, 0x2d, 0x0a, 0x29, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x44, 0x49, 0x53,
	0x41, 0x42, 0x4c, 0x45, 0x44, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x53, 0x5f, 0x4c, 0x49, 0x4d, 0x49,
	0x54, 0x5f, 0x52, 0x49, 0x43, 0x48, 0x45, 0x44, 0x10, 0x06, 0x12, 0x34, 0x0a, 0x30, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x45, 0x4e, 0x41,
	0x4e, 0x54, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x5f, 0x4e, 0x4f, 0x44, 0x45,
	0x53, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f, 0x52, 0x49, 0x43, 0x48, 0x45, 0x44, 0x10, 0x07,
	0x12, 0x1f, 0x0a, 0x1b, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f,
	0x4e, 0x5f, 0x57, 0x52, 0x4f, 0x4e, 0x47, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10,
	0x08, 0x22, 0x40, 0x0a, 0x0b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x31, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x56, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22, 0x19, 0x0a, 0x17, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x80, 0x03, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x1a, 0x9d, 0x02, 0x0a, 0x04, 0x4e, 0x6f,
	0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x61, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x63, 0x6b,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x66, 0x71, 0x64, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x50, 0x6f, 0x72,
	0x74, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1a, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x22, 0x32, 0x0a, 0x17, 0x4c, 0x69, 0x73,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0xba, 0x02,
	0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0d, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x4e, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x72, 0x0a, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x4a,
	0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0x83, 0x02, 0x0a, 0x16, 0x4d,
	0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x5f, 0x66, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x6e, 0x46, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x72, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4e, 0x0a, 0x11, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x73,
	0x6b, 0x55, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x22, 0xeb, 0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x4a, 0x0a, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4d, 0x61,
	0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x41, 0x0a,
	0x0d, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x12, 0x3c, 0x0a, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x3a,
	0x0a, 0x1d, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x55, 0x69, 0x64, 0x22, 0xea, 0x01, 0x0a, 0x17, 0x4d,
	0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x49, 0x64, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x73,
	0x6b, 0x55, 0x69, 0x64, 0x12, 0x49, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x59,
	0x64, 0x62, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12,
	0x36, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64,
	0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x31, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x3d, 0x0a, 0x1c, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x5f, 0x75, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x61, 0x73, 0x6b, 0x73, 0x55, 0x69, 0x64, 0x73, 0x22, 0x36, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x55, 0x69,
	0x64, 0x22, 0xff, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4a, 0x0a, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4d, 0x61, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x0b, 0x74, 0x61, 0x73, 0x6b, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x54, 0x0a, 0x14,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x59, 0x64, 0x62,
	0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52, 0x12,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x73, 0x12, 0x3f, 0x0a, 0x0d, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x64, 0x65, 0x61, 0x64, 0x6c,
	0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x61, 0x64, 0x6c,
	0x69, 0x6e, 0x65, 0x22, 0x37, 0x0a, 0x1a, 0x44, 0x72, 0x6f, 0x70, 0x4d, 0x61, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x55, 0x69, 0x64, 0x22, 0x7c, 0x0a, 0x20,
	0x50, 0x72, 0x6f, 0x6c, 0x6f, 0x6e, 0x67, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x55, 0x69, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x6e,
	0x65, 0x77, 0x5f, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6e,
	0x65, 0x77, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x52, 0x0a, 0x1d, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x59, 0x64,
	0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x51,
	0x0a, 0x14, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x59, 0x64, 0x62,
	0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x69, 0x64, 0x52, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x69,
	0x64, 0x22, 0x8a, 0x02, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x6c, 0x6f, 0x6e, 0x67, 0x61, 0x74, 0x65,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x62, 0x0a,
	0x10, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4d, 0x61,
	0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x6c, 0x6f, 0x6e,
	0x67, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x1a, 0x8a, 0x01, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4d,
	0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x69, 0x64, 0x52, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x69, 0x64, 0x12,
	0x3d, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x7c,
	0x0a, 0x0c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39,
	0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x69, 0x64, 0x52, 0x09,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x59, 0x64, 0x62, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5e, 0x0a, 0x14,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x59, 0x64, 0x62, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0e, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x22, 0x5b, 0x0a, 0x1e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39,
	0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x69, 0x64, 0x52, 0x09,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22, 0xd7, 0x01, 0x0a, 0x1f, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x61, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a,
	0x07, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73,
	0x1a, 0x61, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0c, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0b,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x2a, 0xa9, 0x01, 0x0a, 0x10, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x41, 0x56, 0x41, 0x49,
	0x4c, 0x41, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x41,
	0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x4d, 0x4f, 0x44, 0x45,
	0x5f, 0x53, 0x54, 0x52, 0x4f, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x56, 0x41,
	0x49, 0x4c, 0x41, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x57,
	0x45, 0x41, 0x4b, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42,
	0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x4d, 0x41, 0x52, 0x54,
	0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x49, 0x4c, 0x49,
	0x54, 0x59, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x4f, 0x52, 0x43, 0x45, 0x10, 0x04, 0x2a,
	0x7e, 0x0a, 0x09, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x16,
	0x49, 0x54, 0x45, 0x4d, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x54, 0x45, 0x4d,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x50, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x49,
	0x54, 0x45, 0x4d, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44,
	0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x52, 0x45, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x54,
	0x45, 0x4d, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x04, 0x42,
	0x68, 0x0a, 0x1d, 0x74, 0x65, 0x63, 0x68, 0x2e, 0x79, 0x64, 0x62, 0x2e, 0x64, 0x72, 0x61, 0x66,
	0x74, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x64, 0x62,
	0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x79, 0x64, 0x62, 0x2d, 0x67, 0x6f,
	0x2d, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x72, 0x61, 0x66, 0x74, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x59, 0x64, 0x62, 0x5f, 0x4d, 0x61, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0xf8, 0x01, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_draft_protos_ydb_maintenance_proto_rawDescOnce sync.Once
	file_draft_protos_ydb_maintenance_proto_rawDescData = file_draft_protos_ydb_maintenance_proto_rawDesc
)

func file_draft_protos_ydb_maintenance_proto_rawDescGZIP() []byte {
	file_draft_protos_ydb_maintenance_proto_rawDescOnce.Do(func() {
		file_draft_protos_ydb_maintenance_proto_rawDescData = protoimpl.X.CompressGZIP(file_draft_protos_ydb_maintenance_proto_rawDescData)
	})
	return file_draft_protos_ydb_maintenance_proto_rawDescData
}

var file_draft_protos_ydb_maintenance_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_draft_protos_ydb_maintenance_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_draft_protos_ydb_maintenance_proto_goTypes = []interface{}{
	(AvailabilityMode)(0),                          // 0: Ydb.Maintenance.AvailabilityMode
	(ItemState)(0),                                 // 1: Ydb.Maintenance.ItemState
	(ActionState_ActionStatus)(0),                  // 2: Ydb.Maintenance.ActionState.ActionStatus
	(ActionState_ActionReason)(0),                  // 3: Ydb.Maintenance.ActionState.ActionReason
	(*ActionScope)(nil),                            // 4: Ydb.Maintenance.ActionScope
	(*LockAction)(nil),                             // 5: Ydb.Maintenance.LockAction
	(*SetMaintenanceModeAction)(nil),               // 6: Ydb.Maintenance.SetMaintenanceModeAction
	(*Action)(nil),                                 // 7: Ydb.Maintenance.Action
	(*ActionUid)(nil),                              // 8: Ydb.Maintenance.ActionUid
	(*ActionState)(nil),                            // 9: Ydb.Maintenance.ActionState
	(*ActionGroup)(nil),                            // 10: Ydb.Maintenance.ActionGroup
	(*ActionGroupStates)(nil),                      // 11: Ydb.Maintenance.ActionGroupStates
	(*ListClusterNodesRequest)(nil),                // 12: Ydb.Maintenance.ListClusterNodesRequest
	(*ListClusterNodesResponse)(nil),               // 13: Ydb.Maintenance.ListClusterNodesResponse
	(*ListNodesDevicesRequest)(nil),                // 14: Ydb.Maintenance.ListNodesDevicesRequest
	(*ListNodesDevicesResponse)(nil),               // 15: Ydb.Maintenance.ListNodesDevicesResponse
	(*MaintenanceTaskOptions)(nil),                 // 16: Ydb.Maintenance.MaintenanceTaskOptions
	(*CreateMaintenanceTaskRequest)(nil),           // 17: Ydb.Maintenance.CreateMaintenanceTaskRequest
	(*RefreshMaintenanceTaskRequest)(nil),          // 18: Ydb.Maintenance.RefreshMaintenanceTaskRequest
	(*MaintenanceTaskResponse)(nil),                // 19: Ydb.Maintenance.MaintenanceTaskResponse
	(*ListMaintenanceTasksRequest)(nil),            // 20: Ydb.Maintenance.ListMaintenanceTasksRequest
	(*ListMaintenanceTasksResponse)(nil),           // 21: Ydb.Maintenance.ListMaintenanceTasksResponse
	(*GetMaintenanceTaskRequest)(nil),              // 22: Ydb.Maintenance.GetMaintenanceTaskRequest
	(*GetMaintenanceTaskResponse)(nil),             // 23: Ydb.Maintenance.GetMaintenanceTaskResponse
	(*DropMaintenanceTaskRequest)(nil),             // 24: Ydb.Maintenance.DropMaintenanceTaskRequest
	(*ProlongateMaintenanceTaskRequest)(nil),       // 25: Ydb.Maintenance.ProlongateMaintenanceTaskRequest
	(*ManageMaintenanceTaskResponse)(nil),          // 26: Ydb.Maintenance.ManageMaintenanceTaskResponse
	(*ReleasePermitRequest)(nil),                   // 27: Ydb.Maintenance.ReleasePermitRequest
	(*ProlongatePermitRequest)(nil),                // 28: Ydb.Maintenance.ProlongatePermitRequest
	(*PermitStatus)(nil),                           // 29: Ydb.Maintenance.PermitStatus
	(*ManagePermitResponse)(nil),                   // 30: Ydb.Maintenance.ManagePermitResponse
	(*GetReadableActionReasonRequest)(nil),         // 31: Ydb.Maintenance.GetReadableActionReasonRequest
	(*GetReadableActionReasonResponse)(nil),        // 32: Ydb.Maintenance.GetReadableActionReasonResponse
	(*ActionScope_PDiskId)(nil),                    // 33: Ydb.Maintenance.ActionScope.PDiskId
	(*ListClusterNodesResponse_Node)(nil),          // 34: Ydb.Maintenance.ListClusterNodesResponse.Node
	(*ListNodesDevicesResponse_Device)(nil),        // 35: Ydb.Maintenance.ListNodesDevicesResponse.Device
	(*ListNodesDevicesResponse_NodeDevices)(nil),   // 36: Ydb.Maintenance.ListNodesDevicesResponse.NodeDevices
	(*ProlongatePermitRequest_ActionDuration)(nil), // 37: Ydb.Maintenance.ProlongatePermitRequest.ActionDuration
	(*GetReadableActionReasonResponse_Reason)(nil), // 38: Ydb.Maintenance.GetReadableActionReasonResponse.Reason
	(*durationpb.Duration)(nil),                    // 39: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),                  // 40: google.protobuf.Timestamp
	(Ydb.StatusIds_StatusCode)(0),                  // 41: Ydb.StatusIds.StatusCode
}
var file_draft_protos_ydb_maintenance_proto_depIdxs = []int32{
	33, // 0: Ydb.Maintenance.ActionScope.pdisk_id:type_name -> Ydb.Maintenance.ActionScope.PDiskId
	4,  // 1: Ydb.Maintenance.LockAction.action_scope:type_name -> Ydb.Maintenance.ActionScope
	39, // 2: Ydb.Maintenance.LockAction.duration:type_name -> google.protobuf.Duration
	4,  // 3: Ydb.Maintenance.SetMaintenanceModeAction.action_scope:type_name -> Ydb.Maintenance.ActionScope
	39, // 4: Ydb.Maintenance.SetMaintenanceModeAction.duration:type_name -> google.protobuf.Duration
	5,  // 5: Ydb.Maintenance.Action.lock_action:type_name -> Ydb.Maintenance.LockAction
	6,  // 6: Ydb.Maintenance.Action.set_maintainance_mode_action:type_name -> Ydb.Maintenance.SetMaintenanceModeAction
	7,  // 7: Ydb.Maintenance.ActionState.action:type_name -> Ydb.Maintenance.Action
	2,  // 8: Ydb.Maintenance.ActionState.status:type_name -> Ydb.Maintenance.ActionState.ActionStatus
	8,  // 9: Ydb.Maintenance.ActionState.action_uid:type_name -> Ydb.Maintenance.ActionUid
	3,  // 10: Ydb.Maintenance.ActionState.reason:type_name -> Ydb.Maintenance.ActionState.ActionReason
	40, // 11: Ydb.Maintenance.ActionState.state_timestamp:type_name -> google.protobuf.Timestamp
	40, // 12: Ydb.Maintenance.ActionState.deadline:type_name -> google.protobuf.Timestamp
	7,  // 13: Ydb.Maintenance.ActionGroup.actions:type_name -> Ydb.Maintenance.Action
	9,  // 14: Ydb.Maintenance.ActionGroupStates.action_states:type_name -> Ydb.Maintenance.ActionState
	34, // 15: Ydb.Maintenance.ListClusterNodesResponse.nodes:type_name -> Ydb.Maintenance.ListClusterNodesResponse.Node
	36, // 16: Ydb.Maintenance.ListNodesDevicesResponse.nodes_devices:type_name -> Ydb.Maintenance.ListNodesDevicesResponse.NodeDevices
	0,  // 17: Ydb.Maintenance.MaintenanceTaskOptions.availability_mode:type_name -> Ydb.Maintenance.AvailabilityMode
	16, // 18: Ydb.Maintenance.CreateMaintenanceTaskRequest.task_options:type_name -> Ydb.Maintenance.MaintenanceTaskOptions
	10, // 19: Ydb.Maintenance.CreateMaintenanceTaskRequest.action_groups:type_name -> Ydb.Maintenance.ActionGroup
	39, // 20: Ydb.Maintenance.CreateMaintenanceTaskRequest.task_timeout:type_name -> google.protobuf.Duration
	41, // 21: Ydb.Maintenance.MaintenanceTaskResponse.status:type_name -> Ydb.StatusIds.StatusCode
	11, // 22: Ydb.Maintenance.MaintenanceTaskResponse.actions_states:type_name -> Ydb.Maintenance.ActionGroupStates
	40, // 23: Ydb.Maintenance.MaintenanceTaskResponse.deadline:type_name -> google.protobuf.Timestamp
	16, // 24: Ydb.Maintenance.GetMaintenanceTaskResponse.task_options:type_name -> Ydb.Maintenance.MaintenanceTaskOptions
	11, // 25: Ydb.Maintenance.GetMaintenanceTaskResponse.actions_group_states:type_name -> Ydb.Maintenance.ActionGroupStates
	40, // 26: Ydb.Maintenance.GetMaintenanceTaskResponse.task_deadline:type_name -> google.protobuf.Timestamp
	40, // 27: Ydb.Maintenance.ProlongateMaintenanceTaskRequest.new_deadline:type_name -> google.protobuf.Timestamp
	41, // 28: Ydb.Maintenance.ManageMaintenanceTaskResponse.status:type_name -> Ydb.StatusIds.StatusCode
	8,  // 29: Ydb.Maintenance.ReleasePermitRequest.action_uid:type_name -> Ydb.Maintenance.ActionUid
	37, // 30: Ydb.Maintenance.ProlongatePermitRequest.action_durations:type_name -> Ydb.Maintenance.ProlongatePermitRequest.ActionDuration
	8,  // 31: Ydb.Maintenance.PermitStatus.action_uid:type_name -> Ydb.Maintenance.ActionUid
	41, // 32: Ydb.Maintenance.PermitStatus.status:type_name -> Ydb.StatusIds.StatusCode
	29, // 33: Ydb.Maintenance.ManagePermitResponse.permit_statuses:type_name -> Ydb.Maintenance.PermitStatus
	8,  // 34: Ydb.Maintenance.GetReadableActionReasonRequest.action_ids:type_name -> Ydb.Maintenance.ActionUid
	38, // 35: Ydb.Maintenance.GetReadableActionReasonResponse.reasons:type_name -> Ydb.Maintenance.GetReadableActionReasonResponse.Reason
	1,  // 36: Ydb.Maintenance.ListClusterNodesResponse.Node.state:type_name -> Ydb.Maintenance.ItemState
	1,  // 37: Ydb.Maintenance.ListNodesDevicesResponse.Device.state:type_name -> Ydb.Maintenance.ItemState
	35, // 38: Ydb.Maintenance.ListNodesDevicesResponse.NodeDevices.devices:type_name -> Ydb.Maintenance.ListNodesDevicesResponse.Device
	8,  // 39: Ydb.Maintenance.ProlongatePermitRequest.ActionDuration.action_uid:type_name -> Ydb.Maintenance.ActionUid
	40, // 40: Ydb.Maintenance.ProlongatePermitRequest.ActionDuration.new_deadline:type_name -> google.protobuf.Timestamp
	9,  // 41: Ydb.Maintenance.GetReadableActionReasonResponse.Reason.action_state:type_name -> Ydb.Maintenance.ActionState
	42, // [42:42] is the sub-list for method output_type
	42, // [42:42] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_draft_protos_ydb_maintenance_proto_init() }
func file_draft_protos_ydb_maintenance_proto_init() {
	if File_draft_protos_ydb_maintenance_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_draft_protos_ydb_maintenance_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionScope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMaintenanceModeAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionUid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionGroupStates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClusterNodesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClusterNodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNodesDevicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNodesDevicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaintenanceTaskOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMaintenanceTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshMaintenanceTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaintenanceTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMaintenanceTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMaintenanceTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMaintenanceTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMaintenanceTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropMaintenanceTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProlongateMaintenanceTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManageMaintenanceTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleasePermitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProlongatePermitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermitStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManagePermitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReadableActionReasonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReadableActionReasonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionScope_PDiskId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClusterNodesResponse_Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNodesDevicesResponse_Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNodesDevicesResponse_NodeDevices); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProlongatePermitRequest_ActionDuration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_maintenance_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReadableActionReasonResponse_Reason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_draft_protos_ydb_maintenance_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ActionScope_PdiskId)(nil),
		(*ActionScope_NodeId)(nil),
		(*ActionScope_HostName)(nil),
	}
	file_draft_protos_ydb_maintenance_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Action_LockAction)(nil),
		(*Action_SetMaintainanceModeAction)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_draft_protos_ydb_maintenance_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_draft_protos_ydb_maintenance_proto_goTypes,
		DependencyIndexes: file_draft_protos_ydb_maintenance_proto_depIdxs,
		EnumInfos:         file_draft_protos_ydb_maintenance_proto_enumTypes,
		MessageInfos:      file_draft_protos_ydb_maintenance_proto_msgTypes,
	}.Build()
	File_draft_protos_ydb_maintenance_proto = out.File
	file_draft_protos_ydb_maintenance_proto_rawDesc = nil
	file_draft_protos_ydb_maintenance_proto_goTypes = nil
	file_draft_protos_ydb_maintenance_proto_depIdxs = nil
}
