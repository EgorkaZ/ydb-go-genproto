// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: draft/protos/ydb_query.proto

package Ydb_Query

import (
	Ydb "github.com/ydb-platform/ydb-go-genproto/protos/Ydb"
	Ydb_Issue "github.com/ydb-platform/ydb-go-genproto/protos/Ydb_Issue"
	Ydb_Operations "github.com/ydb-platform/ydb-go-genproto/protos/Ydb_Operations"
	Ydb_TableStats "github.com/ydb-platform/ydb-go-genproto/protos/Ydb_TableStats"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SessionStatus int32

const (
	SessionStatus_SESSION_STATUS_UNSPECIFIED SessionStatus = 0
	SessionStatus_SESSION_STATUS_READY       SessionStatus = 1
	SessionStatus_SESSION_STATUS_BUSY        SessionStatus = 2
)

// Enum value maps for SessionStatus.
var (
	SessionStatus_name = map[int32]string{
		0: "SESSION_STATUS_UNSPECIFIED",
		1: "SESSION_STATUS_READY",
		2: "SESSION_STATUS_BUSY",
	}
	SessionStatus_value = map[string]int32{
		"SESSION_STATUS_UNSPECIFIED": 0,
		"SESSION_STATUS_READY":       1,
		"SESSION_STATUS_BUSY":        2,
	}
)

func (x SessionStatus) Enum() *SessionStatus {
	p := new(SessionStatus)
	*p = x
	return p
}

func (x SessionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_draft_protos_ydb_query_proto_enumTypes[0].Descriptor()
}

func (SessionStatus) Type() protoreflect.EnumType {
	return &file_draft_protos_ydb_query_proto_enumTypes[0]
}

func (x SessionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionStatus.Descriptor instead.
func (SessionStatus) EnumDescriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{0}
}

type Syntax int32

const (
	Syntax_SYNTAX_UNSPECIFIED Syntax = 0
	Syntax_SYNTAX_YQL_V1      Syntax = 1 // YQL
	Syntax_SYNTAX_PG          Syntax = 2 // PostgresQL
)

// Enum value maps for Syntax.
var (
	Syntax_name = map[int32]string{
		0: "SYNTAX_UNSPECIFIED",
		1: "SYNTAX_YQL_V1",
		2: "SYNTAX_PG",
	}
	Syntax_value = map[string]int32{
		"SYNTAX_UNSPECIFIED": 0,
		"SYNTAX_YQL_V1":      1,
		"SYNTAX_PG":          2,
	}
)

func (x Syntax) Enum() *Syntax {
	p := new(Syntax)
	*p = x
	return p
}

func (x Syntax) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Syntax) Descriptor() protoreflect.EnumDescriptor {
	return file_draft_protos_ydb_query_proto_enumTypes[1].Descriptor()
}

func (Syntax) Type() protoreflect.EnumType {
	return &file_draft_protos_ydb_query_proto_enumTypes[1]
}

func (x Syntax) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Syntax.Descriptor instead.
func (Syntax) EnumDescriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{1}
}

type ExecMode int32

const (
	ExecMode_EXEC_MODE_UNSPECIFIED ExecMode = 0
	ExecMode_EXEC_MODE_PARSE       ExecMode = 10
	ExecMode_EXEC_MODE_VALIDATE    ExecMode = 20
	ExecMode_EXEC_MODE_EXPLAIN     ExecMode = 30
	ExecMode_EXEC_MODE_EXECUTE     ExecMode = 50
)

// Enum value maps for ExecMode.
var (
	ExecMode_name = map[int32]string{
		0:  "EXEC_MODE_UNSPECIFIED",
		10: "EXEC_MODE_PARSE",
		20: "EXEC_MODE_VALIDATE",
		30: "EXEC_MODE_EXPLAIN",
		50: "EXEC_MODE_EXECUTE",
	}
	ExecMode_value = map[string]int32{
		"EXEC_MODE_UNSPECIFIED": 0,
		"EXEC_MODE_PARSE":       10,
		"EXEC_MODE_VALIDATE":    20,
		"EXEC_MODE_EXPLAIN":     30,
		"EXEC_MODE_EXECUTE":     50,
	}
)

func (x ExecMode) Enum() *ExecMode {
	p := new(ExecMode)
	*p = x
	return p
}

func (x ExecMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecMode) Descriptor() protoreflect.EnumDescriptor {
	return file_draft_protos_ydb_query_proto_enumTypes[2].Descriptor()
}

func (ExecMode) Type() protoreflect.EnumType {
	return &file_draft_protos_ydb_query_proto_enumTypes[2]
}

func (x ExecMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExecMode.Descriptor instead.
func (ExecMode) EnumDescriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{2}
}

type StatsMode int32

const (
	StatsMode_STATS_MODE_UNSPECIFIED StatsMode = 0
	StatsMode_STATS_MODE_NONE        StatsMode = 10 // Stats collection is disabled
	StatsMode_STATS_MODE_BASIC       StatsMode = 20 // Aggregated stats of reads, updates and deletes per table
	StatsMode_STATS_MODE_FULL        StatsMode = 30 // Add execution stats and plan on top of STATS_MODE_BASIC
	StatsMode_STATS_MODE_PROFILE     StatsMode = 40 // Detailed execution stats including stats for individual tasks and channels
)

// Enum value maps for StatsMode.
var (
	StatsMode_name = map[int32]string{
		0:  "STATS_MODE_UNSPECIFIED",
		10: "STATS_MODE_NONE",
		20: "STATS_MODE_BASIC",
		30: "STATS_MODE_FULL",
		40: "STATS_MODE_PROFILE",
	}
	StatsMode_value = map[string]int32{
		"STATS_MODE_UNSPECIFIED": 0,
		"STATS_MODE_NONE":        10,
		"STATS_MODE_BASIC":       20,
		"STATS_MODE_FULL":        30,
		"STATS_MODE_PROFILE":     40,
	}
)

func (x StatsMode) Enum() *StatsMode {
	p := new(StatsMode)
	*p = x
	return p
}

func (x StatsMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatsMode) Descriptor() protoreflect.EnumDescriptor {
	return file_draft_protos_ydb_query_proto_enumTypes[3].Descriptor()
}

func (StatsMode) Type() protoreflect.EnumType {
	return &file_draft_protos_ydb_query_proto_enumTypes[3]
}

func (x StatsMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatsMode.Descriptor instead.
func (StatsMode) EnumDescriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{3}
}

type ExecStatus int32

const (
	ExecStatus_EXEC_STATUS_UNSPECIFIED ExecStatus = 0
	ExecStatus_EXEC_STATUS_STARTING    ExecStatus = 10
	ExecStatus_EXEC_STATUS_ABORTED     ExecStatus = 20
	ExecStatus_EXEC_STATUS_CANCELLED   ExecStatus = 30
	ExecStatus_EXEC_STATUS_COMPLETED   ExecStatus = 40
	ExecStatus_EXEC_STATUS_FAILED      ExecStatus = 50
)

// Enum value maps for ExecStatus.
var (
	ExecStatus_name = map[int32]string{
		0:  "EXEC_STATUS_UNSPECIFIED",
		10: "EXEC_STATUS_STARTING",
		20: "EXEC_STATUS_ABORTED",
		30: "EXEC_STATUS_CANCELLED",
		40: "EXEC_STATUS_COMPLETED",
		50: "EXEC_STATUS_FAILED",
	}
	ExecStatus_value = map[string]int32{
		"EXEC_STATUS_UNSPECIFIED": 0,
		"EXEC_STATUS_STARTING":    10,
		"EXEC_STATUS_ABORTED":     20,
		"EXEC_STATUS_CANCELLED":   30,
		"EXEC_STATUS_COMPLETED":   40,
		"EXEC_STATUS_FAILED":      50,
	}
)

func (x ExecStatus) Enum() *ExecStatus {
	p := new(ExecStatus)
	*p = x
	return p
}

func (x ExecStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_draft_protos_ydb_query_proto_enumTypes[4].Descriptor()
}

func (ExecStatus) Type() protoreflect.EnumType {
	return &file_draft_protos_ydb_query_proto_enumTypes[4]
}

func (x ExecStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExecStatus.Descriptor instead.
func (ExecStatus) EnumDescriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{4}
}

type CreateSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateSessionRequest) Reset() {
	*x = CreateSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionRequest) ProtoMessage() {}

func (x *CreateSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionRequest.ProtoReflect.Descriptor instead.
func (*CreateSessionRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{0}
}

type CreateSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Ydb.StatusIds_StatusCode  `protobuf:"varint,1,opt,name=status,proto3,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	Issues []*Ydb_Issue.IssueMessage `protobuf:"bytes,2,rep,name=issues,proto3" json:"issues,omitempty"`
	// Identifier of created session
	SessionId string `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Identifier node where session was created
	NodeId int64 `protobuf:"varint,4,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *CreateSessionResponse) Reset() {
	*x = CreateSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionResponse) ProtoMessage() {}

func (x *CreateSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionResponse.ProtoReflect.Descriptor instead.
func (*CreateSessionResponse) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSessionResponse) GetStatus() Ydb.StatusIds_StatusCode {
	if x != nil {
		return x.Status
	}
	return Ydb.StatusIds_StatusCode(0)
}

func (x *CreateSessionResponse) GetIssues() []*Ydb_Issue.IssueMessage {
	if x != nil {
		return x.Issues
	}
	return nil
}

func (x *CreateSessionResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *CreateSessionResponse) GetNodeId() int64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

type DeleteSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifier of session to delete (required)
	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *DeleteSessionRequest) Reset() {
	*x = DeleteSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSessionRequest) ProtoMessage() {}

func (x *DeleteSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSessionRequest.ProtoReflect.Descriptor instead.
func (*DeleteSessionRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type DeleteSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Ydb.StatusIds_StatusCode  `protobuf:"varint,1,opt,name=status,proto3,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	Issues []*Ydb_Issue.IssueMessage `protobuf:"bytes,2,rep,name=issues,proto3" json:"issues,omitempty"`
}

func (x *DeleteSessionResponse) Reset() {
	*x = DeleteSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSessionResponse) ProtoMessage() {}

func (x *DeleteSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSessionResponse.ProtoReflect.Descriptor instead.
func (*DeleteSessionResponse) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteSessionResponse) GetStatus() Ydb.StatusIds_StatusCode {
	if x != nil {
		return x.Status
	}
	return Ydb.StatusIds_StatusCode(0)
}

func (x *DeleteSessionResponse) GetIssues() []*Ydb_Issue.IssueMessage {
	if x != nil {
		return x.Issues
	}
	return nil
}

type PingSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifier of session to ping (required)
	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *PingSessionRequest) Reset() {
	*x = PingSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingSessionRequest) ProtoMessage() {}

func (x *PingSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingSessionRequest.ProtoReflect.Descriptor instead.
func (*PingSessionRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{4}
}

func (x *PingSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type PingSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status        Ydb.StatusIds_StatusCode  `protobuf:"varint,1,opt,name=status,proto3,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	Issues        []*Ydb_Issue.IssueMessage `protobuf:"bytes,2,rep,name=issues,proto3" json:"issues,omitempty"`
	SessionStatus SessionStatus             `protobuf:"varint,3,opt,name=session_status,json=sessionStatus,proto3,enum=Ydb.Query.SessionStatus" json:"session_status,omitempty"`
}

func (x *PingSessionResponse) Reset() {
	*x = PingSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingSessionResponse) ProtoMessage() {}

func (x *PingSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingSessionResponse.ProtoReflect.Descriptor instead.
func (*PingSessionResponse) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{5}
}

func (x *PingSessionResponse) GetStatus() Ydb.StatusIds_StatusCode {
	if x != nil {
		return x.Status
	}
	return Ydb.StatusIds_StatusCode(0)
}

func (x *PingSessionResponse) GetIssues() []*Ydb_Issue.IssueMessage {
	if x != nil {
		return x.Issues
	}
	return nil
}

func (x *PingSessionResponse) GetSessionStatus() SessionStatus {
	if x != nil {
		return x.SessionStatus
	}
	return SessionStatus_SESSION_STATUS_UNSPECIFIED
}

type SerializableModeSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SerializableModeSettings) Reset() {
	*x = SerializableModeSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SerializableModeSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerializableModeSettings) ProtoMessage() {}

func (x *SerializableModeSettings) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SerializableModeSettings.ProtoReflect.Descriptor instead.
func (*SerializableModeSettings) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{6}
}

type OnlineModeSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowInconsistentReads bool `protobuf:"varint,1,opt,name=allow_inconsistent_reads,json=allowInconsistentReads,proto3" json:"allow_inconsistent_reads,omitempty"`
}

func (x *OnlineModeSettings) Reset() {
	*x = OnlineModeSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineModeSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineModeSettings) ProtoMessage() {}

func (x *OnlineModeSettings) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineModeSettings.ProtoReflect.Descriptor instead.
func (*OnlineModeSettings) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{7}
}

func (x *OnlineModeSettings) GetAllowInconsistentReads() bool {
	if x != nil {
		return x.AllowInconsistentReads
	}
	return false
}

type StaleModeSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StaleModeSettings) Reset() {
	*x = StaleModeSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaleModeSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaleModeSettings) ProtoMessage() {}

func (x *StaleModeSettings) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaleModeSettings.ProtoReflect.Descriptor instead.
func (*StaleModeSettings) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{8}
}

type SnapshotModeSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SnapshotModeSettings) Reset() {
	*x = SnapshotModeSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotModeSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotModeSettings) ProtoMessage() {}

func (x *SnapshotModeSettings) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotModeSettings.ProtoReflect.Descriptor instead.
func (*SnapshotModeSettings) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{9}
}

type TransactionSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to TxMode:
	//
	//	*TransactionSettings_SerializableReadWrite
	//	*TransactionSettings_OnlineReadOnly
	//	*TransactionSettings_StaleReadOnly
	//	*TransactionSettings_SnapshotReadOnly
	TxMode isTransactionSettings_TxMode `protobuf_oneof:"tx_mode"`
}

func (x *TransactionSettings) Reset() {
	*x = TransactionSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionSettings) ProtoMessage() {}

func (x *TransactionSettings) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionSettings.ProtoReflect.Descriptor instead.
func (*TransactionSettings) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{10}
}

func (m *TransactionSettings) GetTxMode() isTransactionSettings_TxMode {
	if m != nil {
		return m.TxMode
	}
	return nil
}

func (x *TransactionSettings) GetSerializableReadWrite() *SerializableModeSettings {
	if x, ok := x.GetTxMode().(*TransactionSettings_SerializableReadWrite); ok {
		return x.SerializableReadWrite
	}
	return nil
}

func (x *TransactionSettings) GetOnlineReadOnly() *OnlineModeSettings {
	if x, ok := x.GetTxMode().(*TransactionSettings_OnlineReadOnly); ok {
		return x.OnlineReadOnly
	}
	return nil
}

func (x *TransactionSettings) GetStaleReadOnly() *StaleModeSettings {
	if x, ok := x.GetTxMode().(*TransactionSettings_StaleReadOnly); ok {
		return x.StaleReadOnly
	}
	return nil
}

func (x *TransactionSettings) GetSnapshotReadOnly() *SnapshotModeSettings {
	if x, ok := x.GetTxMode().(*TransactionSettings_SnapshotReadOnly); ok {
		return x.SnapshotReadOnly
	}
	return nil
}

type isTransactionSettings_TxMode interface {
	isTransactionSettings_TxMode()
}

type TransactionSettings_SerializableReadWrite struct {
	SerializableReadWrite *SerializableModeSettings `protobuf:"bytes,1,opt,name=serializable_read_write,json=serializableReadWrite,proto3,oneof"`
}

type TransactionSettings_OnlineReadOnly struct {
	OnlineReadOnly *OnlineModeSettings `protobuf:"bytes,2,opt,name=online_read_only,json=onlineReadOnly,proto3,oneof"`
}

type TransactionSettings_StaleReadOnly struct {
	StaleReadOnly *StaleModeSettings `protobuf:"bytes,3,opt,name=stale_read_only,json=staleReadOnly,proto3,oneof"`
}

type TransactionSettings_SnapshotReadOnly struct {
	SnapshotReadOnly *SnapshotModeSettings `protobuf:"bytes,4,opt,name=snapshot_read_only,json=snapshotReadOnly,proto3,oneof"`
}

func (*TransactionSettings_SerializableReadWrite) isTransactionSettings_TxMode() {}

func (*TransactionSettings_OnlineReadOnly) isTransactionSettings_TxMode() {}

func (*TransactionSettings_StaleReadOnly) isTransactionSettings_TxMode() {}

func (*TransactionSettings_SnapshotReadOnly) isTransactionSettings_TxMode() {}

type TransactionControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to TxSelector:
	//
	//	*TransactionControl_TxId
	//	*TransactionControl_BeginTx
	TxSelector isTransactionControl_TxSelector `protobuf_oneof:"tx_selector"`
	CommitTx   bool                            `protobuf:"varint,10,opt,name=commit_tx,json=commitTx,proto3" json:"commit_tx,omitempty"`
}

func (x *TransactionControl) Reset() {
	*x = TransactionControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionControl) ProtoMessage() {}

func (x *TransactionControl) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionControl.ProtoReflect.Descriptor instead.
func (*TransactionControl) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{11}
}

func (m *TransactionControl) GetTxSelector() isTransactionControl_TxSelector {
	if m != nil {
		return m.TxSelector
	}
	return nil
}

func (x *TransactionControl) GetTxId() string {
	if x, ok := x.GetTxSelector().(*TransactionControl_TxId); ok {
		return x.TxId
	}
	return ""
}

func (x *TransactionControl) GetBeginTx() *TransactionSettings {
	if x, ok := x.GetTxSelector().(*TransactionControl_BeginTx); ok {
		return x.BeginTx
	}
	return nil
}

func (x *TransactionControl) GetCommitTx() bool {
	if x != nil {
		return x.CommitTx
	}
	return false
}

type isTransactionControl_TxSelector interface {
	isTransactionControl_TxSelector()
}

type TransactionControl_TxId struct {
	TxId string `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3,oneof"`
}

type TransactionControl_BeginTx struct {
	BeginTx *TransactionSettings `protobuf:"bytes,2,opt,name=begin_tx,json=beginTx,proto3,oneof"`
}

func (*TransactionControl_TxId) isTransactionControl_TxSelector() {}

func (*TransactionControl_BeginTx) isTransactionControl_TxSelector() {}

type BeginTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Session identifier (required)
	SessionId  string               `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	TxSettings *TransactionSettings `protobuf:"bytes,2,opt,name=tx_settings,json=txSettings,proto3" json:"tx_settings,omitempty"`
}

func (x *BeginTransactionRequest) Reset() {
	*x = BeginTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeginTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginTransactionRequest) ProtoMessage() {}

func (x *BeginTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginTransactionRequest.ProtoReflect.Descriptor instead.
func (*BeginTransactionRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{12}
}

func (x *BeginTransactionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *BeginTransactionRequest) GetTxSettings() *TransactionSettings {
	if x != nil {
		return x.TxSettings
	}
	return nil
}

type TransactionMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Transaction identifier
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TransactionMeta) Reset() {
	*x = TransactionMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionMeta) ProtoMessage() {}

func (x *TransactionMeta) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionMeta.ProtoReflect.Descriptor instead.
func (*TransactionMeta) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{13}
}

func (x *TransactionMeta) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type BeginTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Ydb.StatusIds_StatusCode  `protobuf:"varint,1,opt,name=status,proto3,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	Issues []*Ydb_Issue.IssueMessage `protobuf:"bytes,2,rep,name=issues,proto3" json:"issues,omitempty"`
	TxMeta *TransactionMeta          `protobuf:"bytes,3,opt,name=tx_meta,json=txMeta,proto3" json:"tx_meta,omitempty"`
}

func (x *BeginTransactionResponse) Reset() {
	*x = BeginTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeginTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginTransactionResponse) ProtoMessage() {}

func (x *BeginTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginTransactionResponse.ProtoReflect.Descriptor instead.
func (*BeginTransactionResponse) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{14}
}

func (x *BeginTransactionResponse) GetStatus() Ydb.StatusIds_StatusCode {
	if x != nil {
		return x.Status
	}
	return Ydb.StatusIds_StatusCode(0)
}

func (x *BeginTransactionResponse) GetIssues() []*Ydb_Issue.IssueMessage {
	if x != nil {
		return x.Issues
	}
	return nil
}

func (x *BeginTransactionResponse) GetTxMeta() *TransactionMeta {
	if x != nil {
		return x.TxMeta
	}
	return nil
}

type CommitTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Session identifier (required)
	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Transaction identifier (required)
	TxId string `protobuf:"bytes,2,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
}

func (x *CommitTransactionRequest) Reset() {
	*x = CommitTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitTransactionRequest) ProtoMessage() {}

func (x *CommitTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitTransactionRequest.ProtoReflect.Descriptor instead.
func (*CommitTransactionRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{15}
}

func (x *CommitTransactionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *CommitTransactionRequest) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

type CommitTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Ydb.StatusIds_StatusCode  `protobuf:"varint,1,opt,name=status,proto3,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	Issues []*Ydb_Issue.IssueMessage `protobuf:"bytes,2,rep,name=issues,proto3" json:"issues,omitempty"`
}

func (x *CommitTransactionResponse) Reset() {
	*x = CommitTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitTransactionResponse) ProtoMessage() {}

func (x *CommitTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitTransactionResponse.ProtoReflect.Descriptor instead.
func (*CommitTransactionResponse) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{16}
}

func (x *CommitTransactionResponse) GetStatus() Ydb.StatusIds_StatusCode {
	if x != nil {
		return x.Status
	}
	return Ydb.StatusIds_StatusCode(0)
}

func (x *CommitTransactionResponse) GetIssues() []*Ydb_Issue.IssueMessage {
	if x != nil {
		return x.Issues
	}
	return nil
}

type RollbackTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Session identifier (required)
	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Transaction identifier (required)
	TxId string `protobuf:"bytes,2,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
}

func (x *RollbackTransactionRequest) Reset() {
	*x = RollbackTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollbackTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackTransactionRequest) ProtoMessage() {}

func (x *RollbackTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackTransactionRequest.ProtoReflect.Descriptor instead.
func (*RollbackTransactionRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{17}
}

func (x *RollbackTransactionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *RollbackTransactionRequest) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

type RollbackTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Ydb.StatusIds_StatusCode  `protobuf:"varint,1,opt,name=status,proto3,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	Issues []*Ydb_Issue.IssueMessage `protobuf:"bytes,2,rep,name=issues,proto3" json:"issues,omitempty"`
}

func (x *RollbackTransactionResponse) Reset() {
	*x = RollbackTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollbackTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackTransactionResponse) ProtoMessage() {}

func (x *RollbackTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackTransactionResponse.ProtoReflect.Descriptor instead.
func (*RollbackTransactionResponse) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{18}
}

func (x *RollbackTransactionResponse) GetStatus() Ydb.StatusIds_StatusCode {
	if x != nil {
		return x.Status
	}
	return Ydb.StatusIds_StatusCode(0)
}

func (x *RollbackTransactionResponse) GetIssues() []*Ydb_Issue.IssueMessage {
	if x != nil {
		return x.Issues
	}
	return nil
}

type QueryContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Syntax Syntax `protobuf:"varint,1,opt,name=syntax,proto3,enum=Ydb.Query.Syntax" json:"syntax,omitempty"`
	Text   string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *QueryContent) Reset() {
	*x = QueryContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryContent) ProtoMessage() {}

func (x *QueryContent) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryContent.ProtoReflect.Descriptor instead.
func (*QueryContent) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{19}
}

func (x *QueryContent) GetSyntax() Syntax {
	if x != nil {
		return x.Syntax
	}
	return Syntax_SYNTAX_UNSPECIFIED
}

func (x *QueryContent) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type ExecuteQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Session identifier (required)
	SessionId string              `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	ExecMode  ExecMode            `protobuf:"varint,2,opt,name=exec_mode,json=execMode,proto3,enum=Ydb.Query.ExecMode" json:"exec_mode,omitempty"`
	TxControl *TransactionControl `protobuf:"bytes,3,opt,name=tx_control,json=txControl,proto3" json:"tx_control,omitempty"`
	// Types that are assignable to Query:
	//
	//	*ExecuteQueryRequest_QueryContent
	Query      isExecuteQueryRequest_Query `protobuf_oneof:"query"`
	Parameters map[string]*Ydb.TypedValue  `protobuf:"bytes,6,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	StatsMode  StatsMode                   `protobuf:"varint,8,opt,name=stats_mode,json=statsMode,proto3,enum=Ydb.Query.StatsMode" json:"stats_mode,omitempty"`
	// For queries with multiple result sets, some of them may be computed concurrently.
	// If true, parts of different results sets may be interleaved in response stream.
	ConcurrentResultSets bool `protobuf:"varint,9,opt,name=concurrent_result_sets,json=concurrentResultSets,proto3" json:"concurrent_result_sets,omitempty"`
}

func (x *ExecuteQueryRequest) Reset() {
	*x = ExecuteQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteQueryRequest) ProtoMessage() {}

func (x *ExecuteQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteQueryRequest.ProtoReflect.Descriptor instead.
func (*ExecuteQueryRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{20}
}

func (x *ExecuteQueryRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ExecuteQueryRequest) GetExecMode() ExecMode {
	if x != nil {
		return x.ExecMode
	}
	return ExecMode_EXEC_MODE_UNSPECIFIED
}

func (x *ExecuteQueryRequest) GetTxControl() *TransactionControl {
	if x != nil {
		return x.TxControl
	}
	return nil
}

func (m *ExecuteQueryRequest) GetQuery() isExecuteQueryRequest_Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (x *ExecuteQueryRequest) GetQueryContent() *QueryContent {
	if x, ok := x.GetQuery().(*ExecuteQueryRequest_QueryContent); ok {
		return x.QueryContent
	}
	return nil
}

func (x *ExecuteQueryRequest) GetParameters() map[string]*Ydb.TypedValue {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *ExecuteQueryRequest) GetStatsMode() StatsMode {
	if x != nil {
		return x.StatsMode
	}
	return StatsMode_STATS_MODE_UNSPECIFIED
}

func (x *ExecuteQueryRequest) GetConcurrentResultSets() bool {
	if x != nil {
		return x.ConcurrentResultSets
	}
	return false
}

type isExecuteQueryRequest_Query interface {
	isExecuteQueryRequest_Query()
}

type ExecuteQueryRequest_QueryContent struct {
	QueryContent *QueryContent `protobuf:"bytes,4,opt,name=query_content,json=queryContent,proto3,oneof"`
}

func (*ExecuteQueryRequest_QueryContent) isExecuteQueryRequest_Query() {}

type ResultSetMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Columns []*Ydb.Column `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
}

func (x *ResultSetMeta) Reset() {
	*x = ResultSetMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultSetMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultSetMeta) ProtoMessage() {}

func (x *ResultSetMeta) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultSetMeta.ProtoReflect.Descriptor instead.
func (*ResultSetMeta) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{21}
}

func (x *ResultSetMeta) GetColumns() []*Ydb.Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

type ExecuteQueryResponsePart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Ydb.StatusIds_StatusCode  `protobuf:"varint,1,opt,name=status,proto3,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	Issues []*Ydb_Issue.IssueMessage `protobuf:"bytes,2,rep,name=issues,proto3" json:"issues,omitempty"`
	// Index of current result set
	ResultSetIndex int64 `protobuf:"varint,3,opt,name=result_set_index,json=resultSetIndex,proto3" json:"result_set_index,omitempty"`
	// Result set part
	ResultSet *Ydb.ResultSet `protobuf:"bytes,4,opt,name=result_set,json=resultSet,proto3" json:"result_set,omitempty"`
	// Transaction meta
	TxMeta *TransactionMeta `protobuf:"bytes,5,opt,name=tx_meta,json=txMeta,proto3" json:"tx_meta,omitempty"`
	// Result sets meta (first part only)
	ResultSetsMeta []*ResultSetMeta `protobuf:"bytes,6,rep,name=result_sets_meta,json=resultSetsMeta,proto3" json:"result_sets_meta,omitempty"`
	// Execution statistics (last part only)
	ExecStats *Ydb_TableStats.QueryStats `protobuf:"bytes,7,opt,name=exec_stats,json=execStats,proto3" json:"exec_stats,omitempty"`
}

func (x *ExecuteQueryResponsePart) Reset() {
	*x = ExecuteQueryResponsePart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteQueryResponsePart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteQueryResponsePart) ProtoMessage() {}

func (x *ExecuteQueryResponsePart) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteQueryResponsePart.ProtoReflect.Descriptor instead.
func (*ExecuteQueryResponsePart) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{22}
}

func (x *ExecuteQueryResponsePart) GetStatus() Ydb.StatusIds_StatusCode {
	if x != nil {
		return x.Status
	}
	return Ydb.StatusIds_StatusCode(0)
}

func (x *ExecuteQueryResponsePart) GetIssues() []*Ydb_Issue.IssueMessage {
	if x != nil {
		return x.Issues
	}
	return nil
}

func (x *ExecuteQueryResponsePart) GetResultSetIndex() int64 {
	if x != nil {
		return x.ResultSetIndex
	}
	return 0
}

func (x *ExecuteQueryResponsePart) GetResultSet() *Ydb.ResultSet {
	if x != nil {
		return x.ResultSet
	}
	return nil
}

func (x *ExecuteQueryResponsePart) GetTxMeta() *TransactionMeta {
	if x != nil {
		return x.TxMeta
	}
	return nil
}

func (x *ExecuteQueryResponsePart) GetResultSetsMeta() []*ResultSetMeta {
	if x != nil {
		return x.ResultSetsMeta
	}
	return nil
}

func (x *ExecuteQueryResponsePart) GetExecStats() *Ydb_TableStats.QueryStats {
	if x != nil {
		return x.ExecStats
	}
	return nil
}

type VersionedScriptId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Script id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Script revision.
	// If specified in method parameters, the real script revision
	// before modification will be compared with this revision
	// and request will be cancelled if they don't match.
	Revision int64 `protobuf:"varint,2,opt,name=revision,proto3" json:"revision,omitempty"`
}

func (x *VersionedScriptId) Reset() {
	*x = VersionedScriptId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionedScriptId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionedScriptId) ProtoMessage() {}

func (x *VersionedScriptId) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionedScriptId.ProtoReflect.Descriptor instead.
func (*VersionedScriptId) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{23}
}

func (x *VersionedScriptId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VersionedScriptId) GetRevision() int64 {
	if x != nil {
		return x.Revision
	}
	return 0
}

type ExecuteScriptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
	// Session identifier. If empty, implicit session is created for script execution.
	SessionId string   `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	ExecMode  ExecMode `protobuf:"varint,4,opt,name=exec_mode,json=execMode,proto3,enum=Ydb.Query.ExecMode" json:"exec_mode,omitempty"`
	// Types that are assignable to Script:
	//
	//	*ExecuteScriptRequest_ScriptContent
	//	*ExecuteScriptRequest_ScriptId
	Script        isExecuteScriptRequest_Script `protobuf_oneof:"script"`
	Parameters    map[string]*Ydb.TypedValue    `protobuf:"bytes,7,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Persistent    bool                          `protobuf:"varint,8,opt,name=persistent,proto3" json:"persistent,omitempty"` // TODO: Persistent execution / persistent results?
	ExecutionName string                        `protobuf:"bytes,9,opt,name=execution_name,json=executionName,proto3" json:"execution_name,omitempty"`
	StatsMode     StatsMode                     `protobuf:"varint,11,opt,name=stats_mode,json=statsMode,proto3,enum=Ydb.Query.StatsMode" json:"stats_mode,omitempty"`
	Attributes    map[string]string             `protobuf:"bytes,12,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ExecuteScriptRequest) Reset() {
	*x = ExecuteScriptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteScriptRequest) ProtoMessage() {}

func (x *ExecuteScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteScriptRequest.ProtoReflect.Descriptor instead.
func (*ExecuteScriptRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{24}
}

func (x *ExecuteScriptRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *ExecuteScriptRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ExecuteScriptRequest) GetExecMode() ExecMode {
	if x != nil {
		return x.ExecMode
	}
	return ExecMode_EXEC_MODE_UNSPECIFIED
}

func (m *ExecuteScriptRequest) GetScript() isExecuteScriptRequest_Script {
	if m != nil {
		return m.Script
	}
	return nil
}

func (x *ExecuteScriptRequest) GetScriptContent() *QueryContent {
	if x, ok := x.GetScript().(*ExecuteScriptRequest_ScriptContent); ok {
		return x.ScriptContent
	}
	return nil
}

func (x *ExecuteScriptRequest) GetScriptId() *VersionedScriptId {
	if x, ok := x.GetScript().(*ExecuteScriptRequest_ScriptId); ok {
		return x.ScriptId
	}
	return nil
}

func (x *ExecuteScriptRequest) GetParameters() map[string]*Ydb.TypedValue {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *ExecuteScriptRequest) GetPersistent() bool {
	if x != nil {
		return x.Persistent
	}
	return false
}

func (x *ExecuteScriptRequest) GetExecutionName() string {
	if x != nil {
		return x.ExecutionName
	}
	return ""
}

func (x *ExecuteScriptRequest) GetStatsMode() StatsMode {
	if x != nil {
		return x.StatsMode
	}
	return StatsMode_STATS_MODE_UNSPECIFIED
}

func (x *ExecuteScriptRequest) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type isExecuteScriptRequest_Script interface {
	isExecuteScriptRequest_Script()
}

type ExecuteScriptRequest_ScriptContent struct {
	ScriptContent *QueryContent `protobuf:"bytes,5,opt,name=script_content,json=scriptContent,proto3,oneof"`
}

type ExecuteScriptRequest_ScriptId struct {
	ScriptId *VersionedScriptId `protobuf:"bytes,6,opt,name=script_id,json=scriptId,proto3,oneof"`
}

func (*ExecuteScriptRequest_ScriptContent) isExecuteScriptRequest_Script() {}

func (*ExecuteScriptRequest_ScriptId) isExecuteScriptRequest_Script() {}

type ExecuteScriptMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecutionId   string             `protobuf:"bytes,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	ExecStatus    ExecStatus         `protobuf:"varint,2,opt,name=exec_status,json=execStatus,proto3,enum=Ydb.Query.ExecStatus" json:"exec_status,omitempty"`
	ScriptContent *QueryContent      `protobuf:"bytes,3,opt,name=script_content,json=scriptContent,proto3" json:"script_content,omitempty"`
	ScriptId      *VersionedScriptId `protobuf:"bytes,4,opt,name=script_id,json=scriptId,proto3" json:"script_id,omitempty"`
	Attributes    map[string]string  `protobuf:"bytes,5,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ResultSetMeta []*ResultSetMeta   `protobuf:"bytes,6,rep,name=result_set_meta,json=resultSetMeta,proto3" json:"result_set_meta,omitempty"`
	ExecMode      ExecMode           `protobuf:"varint,7,opt,name=exec_mode,json=execMode,proto3,enum=Ydb.Query.ExecMode" json:"exec_mode,omitempty"`
	// Execution statistics
	ExecStats *Ydb_TableStats.QueryStats `protobuf:"bytes,8,opt,name=exec_stats,json=execStats,proto3" json:"exec_stats,omitempty"`
}

func (x *ExecuteScriptMetadata) Reset() {
	*x = ExecuteScriptMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteScriptMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteScriptMetadata) ProtoMessage() {}

func (x *ExecuteScriptMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteScriptMetadata.ProtoReflect.Descriptor instead.
func (*ExecuteScriptMetadata) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{25}
}

func (x *ExecuteScriptMetadata) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *ExecuteScriptMetadata) GetExecStatus() ExecStatus {
	if x != nil {
		return x.ExecStatus
	}
	return ExecStatus_EXEC_STATUS_UNSPECIFIED
}

func (x *ExecuteScriptMetadata) GetScriptContent() *QueryContent {
	if x != nil {
		return x.ScriptContent
	}
	return nil
}

func (x *ExecuteScriptMetadata) GetScriptId() *VersionedScriptId {
	if x != nil {
		return x.ScriptId
	}
	return nil
}

func (x *ExecuteScriptMetadata) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *ExecuteScriptMetadata) GetResultSetMeta() []*ResultSetMeta {
	if x != nil {
		return x.ResultSetMeta
	}
	return nil
}

func (x *ExecuteScriptMetadata) GetExecMode() ExecMode {
	if x != nil {
		return x.ExecMode
	}
	return ExecMode_EXEC_MODE_UNSPECIFIED
}

func (x *ExecuteScriptMetadata) GetExecStats() *Ydb_TableStats.QueryStats {
	if x != nil {
		return x.ExecStats
	}
	return nil
}

type FetchScriptResultsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecutionId string `protobuf:"bytes,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	// Types that are assignable to Fetch:
	//
	//	*FetchScriptResultsRequest_FetchToken
	Fetch      isFetchScriptResultsRequest_Fetch `protobuf_oneof:"fetch"`
	RowsOffset int64                             `protobuf:"varint,3,opt,name=rows_offset,json=rowsOffset,proto3" json:"rows_offset,omitempty"`
	RowsLimit  int64                             `protobuf:"varint,4,opt,name=rows_limit,json=rowsLimit,proto3" json:"rows_limit,omitempty"`
}

func (x *FetchScriptResultsRequest) Reset() {
	*x = FetchScriptResultsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchScriptResultsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchScriptResultsRequest) ProtoMessage() {}

func (x *FetchScriptResultsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchScriptResultsRequest.ProtoReflect.Descriptor instead.
func (*FetchScriptResultsRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{26}
}

func (x *FetchScriptResultsRequest) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (m *FetchScriptResultsRequest) GetFetch() isFetchScriptResultsRequest_Fetch {
	if m != nil {
		return m.Fetch
	}
	return nil
}

func (x *FetchScriptResultsRequest) GetFetchToken() string {
	if x, ok := x.GetFetch().(*FetchScriptResultsRequest_FetchToken); ok {
		return x.FetchToken
	}
	return ""
}

func (x *FetchScriptResultsRequest) GetRowsOffset() int64 {
	if x != nil {
		return x.RowsOffset
	}
	return 0
}

func (x *FetchScriptResultsRequest) GetRowsLimit() int64 {
	if x != nil {
		return x.RowsLimit
	}
	return 0
}

type isFetchScriptResultsRequest_Fetch interface {
	isFetchScriptResultsRequest_Fetch()
}

type FetchScriptResultsRequest_FetchToken struct {
	FetchToken string `protobuf:"bytes,2,opt,name=fetch_token,json=fetchToken,proto3,oneof"`
}

func (*FetchScriptResultsRequest_FetchToken) isFetchScriptResultsRequest_Fetch() {}

type FetchScriptResultsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status         Ydb.StatusIds_StatusCode  `protobuf:"varint,1,opt,name=status,proto3,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	Issues         []*Ydb_Issue.IssueMessage `protobuf:"bytes,2,rep,name=issues,proto3" json:"issues,omitempty"`
	ResultSetIndex int64                     `protobuf:"varint,3,opt,name=result_set_index,json=resultSetIndex,proto3" json:"result_set_index,omitempty"`
	ResultSet      *Ydb.ResultSet            `protobuf:"bytes,4,opt,name=result_set,json=resultSet,proto3" json:"result_set,omitempty"`
	NextFetchToken string                    `protobuf:"bytes,5,opt,name=next_fetch_token,json=nextFetchToken,proto3" json:"next_fetch_token,omitempty"`
}

func (x *FetchScriptResultsResponse) Reset() {
	*x = FetchScriptResultsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchScriptResultsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchScriptResultsResponse) ProtoMessage() {}

func (x *FetchScriptResultsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchScriptResultsResponse.ProtoReflect.Descriptor instead.
func (*FetchScriptResultsResponse) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{27}
}

func (x *FetchScriptResultsResponse) GetStatus() Ydb.StatusIds_StatusCode {
	if x != nil {
		return x.Status
	}
	return Ydb.StatusIds_StatusCode(0)
}

func (x *FetchScriptResultsResponse) GetIssues() []*Ydb_Issue.IssueMessage {
	if x != nil {
		return x.Issues
	}
	return nil
}

func (x *FetchScriptResultsResponse) GetResultSetIndex() int64 {
	if x != nil {
		return x.ResultSetIndex
	}
	return 0
}

func (x *FetchScriptResultsResponse) GetResultSet() *Ydb.ResultSet {
	if x != nil {
		return x.ResultSet
	}
	return nil
}

func (x *FetchScriptResultsResponse) GetNextFetchToken() string {
	if x != nil {
		return x.NextFetchToken
	}
	return ""
}

type Script struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScriptId      *VersionedScriptId `protobuf:"bytes,1,opt,name=script_id,json=scriptId,proto3" json:"script_id,omitempty"`
	ScriptContent *QueryContent      `protobuf:"bytes,2,opt,name=script_content,json=scriptContent,proto3" json:"script_content,omitempty"`
}

func (x *Script) Reset() {
	*x = Script{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Script) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Script) ProtoMessage() {}

func (x *Script) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Script.ProtoReflect.Descriptor instead.
func (*Script) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{28}
}

func (x *Script) GetScriptId() *VersionedScriptId {
	if x != nil {
		return x.ScriptId
	}
	return nil
}

func (x *Script) GetScriptContent() *QueryContent {
	if x != nil {
		return x.ScriptContent
	}
	return nil
}

type SaveScriptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScriptId      *VersionedScriptId `protobuf:"bytes,1,opt,name=script_id,json=scriptId,proto3" json:"script_id,omitempty"` // If specified, set new content to existing script
	ScriptContent *QueryContent      `protobuf:"bytes,2,opt,name=script_content,json=scriptContent,proto3" json:"script_content,omitempty"`
}

func (x *SaveScriptRequest) Reset() {
	*x = SaveScriptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveScriptRequest) ProtoMessage() {}

func (x *SaveScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveScriptRequest.ProtoReflect.Descriptor instead.
func (*SaveScriptRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{29}
}

func (x *SaveScriptRequest) GetScriptId() *VersionedScriptId {
	if x != nil {
		return x.ScriptId
	}
	return nil
}

func (x *SaveScriptRequest) GetScriptContent() *QueryContent {
	if x != nil {
		return x.ScriptContent
	}
	return nil
}

type SaveScriptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   Ydb.StatusIds_StatusCode  `protobuf:"varint,1,opt,name=status,proto3,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	Issues   []*Ydb_Issue.IssueMessage `protobuf:"bytes,2,rep,name=issues,proto3" json:"issues,omitempty"`
	ScriptId *VersionedScriptId        `protobuf:"bytes,3,opt,name=script_id,json=scriptId,proto3" json:"script_id,omitempty"`
}

func (x *SaveScriptResponse) Reset() {
	*x = SaveScriptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveScriptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveScriptResponse) ProtoMessage() {}

func (x *SaveScriptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveScriptResponse.ProtoReflect.Descriptor instead.
func (*SaveScriptResponse) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{30}
}

func (x *SaveScriptResponse) GetStatus() Ydb.StatusIds_StatusCode {
	if x != nil {
		return x.Status
	}
	return Ydb.StatusIds_StatusCode(0)
}

func (x *SaveScriptResponse) GetIssues() []*Ydb_Issue.IssueMessage {
	if x != nil {
		return x.Issues
	}
	return nil
}

func (x *SaveScriptResponse) GetScriptId() *VersionedScriptId {
	if x != nil {
		return x.ScriptId
	}
	return nil
}

type ListScriptsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageToken string `protobuf:"bytes,1,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageSize  int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListScriptsRequest) Reset() {
	*x = ListScriptsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListScriptsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScriptsRequest) ProtoMessage() {}

func (x *ListScriptsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScriptsRequest.ProtoReflect.Descriptor instead.
func (*ListScriptsRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{31}
}

func (x *ListScriptsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListScriptsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListScriptsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status        Ydb.StatusIds_StatusCode  `protobuf:"varint,1,opt,name=status,proto3,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	Issues        []*Ydb_Issue.IssueMessage `protobuf:"bytes,2,rep,name=issues,proto3" json:"issues,omitempty"`
	Scripts       []*Script                 `protobuf:"bytes,3,rep,name=scripts,proto3" json:"scripts,omitempty"`
	NextPageToken string                    `protobuf:"bytes,4,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListScriptsResponse) Reset() {
	*x = ListScriptsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListScriptsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScriptsResponse) ProtoMessage() {}

func (x *ListScriptsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScriptsResponse.ProtoReflect.Descriptor instead.
func (*ListScriptsResponse) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{32}
}

func (x *ListScriptsResponse) GetStatus() Ydb.StatusIds_StatusCode {
	if x != nil {
		return x.Status
	}
	return Ydb.StatusIds_StatusCode(0)
}

func (x *ListScriptsResponse) GetIssues() []*Ydb_Issue.IssueMessage {
	if x != nil {
		return x.Issues
	}
	return nil
}

func (x *ListScriptsResponse) GetScripts() []*Script {
	if x != nil {
		return x.Scripts
	}
	return nil
}

func (x *ListScriptsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type DeleteScriptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScriptId *VersionedScriptId `protobuf:"bytes,1,opt,name=script_id,json=scriptId,proto3" json:"script_id,omitempty"`
}

func (x *DeleteScriptRequest) Reset() {
	*x = DeleteScriptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScriptRequest) ProtoMessage() {}

func (x *DeleteScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScriptRequest.ProtoReflect.Descriptor instead.
func (*DeleteScriptRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteScriptRequest) GetScriptId() *VersionedScriptId {
	if x != nil {
		return x.ScriptId
	}
	return nil
}

type DeleteScriptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Ydb.StatusIds_StatusCode  `protobuf:"varint,1,opt,name=status,proto3,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	Issues []*Ydb_Issue.IssueMessage `protobuf:"bytes,2,rep,name=issues,proto3" json:"issues,omitempty"`
}

func (x *DeleteScriptResponse) Reset() {
	*x = DeleteScriptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_query_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteScriptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScriptResponse) ProtoMessage() {}

func (x *DeleteScriptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_query_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScriptResponse.ProtoReflect.Descriptor instead.
func (*DeleteScriptResponse) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_query_proto_rawDescGZIP(), []int{34}
}

func (x *DeleteScriptResponse) GetStatus() Ydb.StatusIds_StatusCode {
	if x != nil {
		return x.Status
	}
	return Ydb.StatusIds_StatusCode(0)
}

func (x *DeleteScriptResponse) GetIssues() []*Ydb_Issue.IssueMessage {
	if x != nil {
		return x.Issues
	}
	return nil
}

var File_draft_protos_ydb_query_proto protoreflect.FileDescriptor

var file_draft_protos_ydb_query_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x64, 0x72, 0x61, 0x66, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x79,
	0x64, 0x62, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x59, 0x64, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x23, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x79, 0x64, 0x62, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x79, 0x64, 0x62, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2f, 0x79, 0x64, 0x62, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2f, 0x79, 0x64, 0x62, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f,
	0x79, 0x64, 0x62, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x1c, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x22, 0xc6, 0x01,
	0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x59, 0x64, 0x62,
	0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0a, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xa2, 0xe6, 0x2a, 0x03, 0x18, 0x80, 0x08, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x08, 0xb2, 0xe6, 0x2a, 0x04, 0x3e, 0x3d, 0x20, 0x30, 0x52, 0x06,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26,
	0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xa2, 0xe6, 0x2a, 0x03, 0x18, 0x80, 0x08, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x7b, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x73, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x2e, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x73, 0x22, 0x3c, 0x0a, 0x12, 0x50, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0a, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xa2,
	0xe6, 0x2a, 0x03, 0x18, 0x80, 0x08, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0xba, 0x01, 0x0a, 0x13, 0x50, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x59, 0x64, 0x62, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x06,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x59,
	0x64, 0x62, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x12, 0x3f, 0x0a,
	0x0e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x1a,
	0x0a, 0x18, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x4e, 0x0a, 0x12, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x38, 0x0a, 0x18, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x63, 0x6f, 0x6e, 0x73,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x16, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x63, 0x6f, 0x6e, 0x73, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x64, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x74,
	0x61, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22,
	0x16, 0x0a, 0x14, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xe3, 0x02, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x5d, 0x0a, 0x17, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x72, 0x65, 0x61, 0x64, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x48, 0x00, 0x52, 0x15, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x64, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x49,
	0x0a, 0x10, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x6e,
	0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x48, 0x00, 0x52, 0x0e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x46, 0x0a, 0x0f, 0x73, 0x74, 0x61,
	0x6c, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x53,
	0x74, 0x61, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x48, 0x00, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c,
	0x79, 0x12, 0x4f, 0x0a, 0x12, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x72, 0x65,
	0x61, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x59, 0x64, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x48, 0x00,
	0x52, 0x10, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e,
	0x6c, 0x79, 0x42, 0x09, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x9d, 0x01,
	0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x12, 0x1e, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xa2, 0xe6, 0x2a, 0x03, 0x18, 0x80, 0x08, 0x48, 0x00, 0x52, 0x04,
	0x74, 0x78, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x08, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x48, 0x00, 0x52, 0x07, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54,
	0x78, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x78, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x78, 0x42, 0x0d,
	0x0a, 0x0b, 0x74, 0x78, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x82, 0x01,
	0x0a, 0x17, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0a, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xa2,
	0xe6, 0x2a, 0x03, 0x18, 0x80, 0x08, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x3f, 0x0a, 0x0b, 0x74, 0x78, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0a, 0x74, 0x78, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x22, 0x2a, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xa2, 0xe6, 0x2a, 0x03, 0x18, 0x80, 0x08, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb3,
	0x01, 0x0a, 0x18, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x59, 0x64,
	0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f,
	0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x59, 0x64, 0x62, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x12,
	0x33, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x06, 0x74, 0x78,
	0x4d, 0x65, 0x74, 0x61, 0x22, 0x60, 0x0a, 0x18, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xa2, 0xe6, 0x2a, 0x03, 0x18, 0x80, 0x08, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xa2, 0xe6, 0x2a, 0x03, 0x18, 0x80, 0x08,
	0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x22, 0x7f, 0x0a, 0x19, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x49, 0x64, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x22, 0x62, 0x0a, 0x1a, 0x52, 0x6f, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xa2, 0xe6, 0x2a, 0x03, 0x18,
	0x80, 0x08, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xa2, 0xe6,
	0x2a, 0x03, 0x18, 0x80, 0x08, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x1b,
	0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x59, 0x64,
	0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f,
	0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x59, 0x64, 0x62, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x22,
	0x4d, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x29, 0x0a, 0x06, 0x73, 0x79, 0x6e, 0x74, 0x61, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x11, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x53, 0x79, 0x6e, 0x74,
	0x61, 0x78, 0x52, 0x06, 0x73, 0x79, 0x6e, 0x74, 0x61, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x87,
	0x04, 0x0a, 0x13, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xa2, 0xe6, 0x2a, 0x03,
	0x18, 0x80, 0x08, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x30,
	0x0a, 0x09, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x45, 0x78,
	0x65, 0x63, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x65, 0x78, 0x65, 0x63, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x3c, 0x0a, 0x0a, 0x74, 0x78, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x52, 0x09, 0x74, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x3e,
	0x0a, 0x0d, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x4e,
	0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x33,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x73, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x74, 0x73, 0x1a, 0x4e, 0x0a, 0x0f, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x59, 0x64, 0x62, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x4a, 0x04, 0x08, 0x07, 0x10, 0x08, 0x22, 0x36, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x07, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x59, 0x64, 0x62,
	0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73,
	0x22, 0x95, 0x03, 0x0a, 0x18, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x72, 0x74, 0x12, 0x31, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x59, 0x64, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x73, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2f, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x2e, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x73, 0x12, 0x32, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x08, 0xb2, 0xe6, 0x2a,
	0x04, 0x3e, 0x3d, 0x20, 0x30, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2d, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f,
	0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x59, 0x64, 0x62, 0x2e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x74, 0x52, 0x09, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x53, 0x65, 0x74, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x06, 0x74, 0x78, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x42, 0x0a, 0x10, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0e, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x74, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x39, 0x0a,
	0x0a, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x09, 0x65,
	0x78, 0x65, 0x63, 0x53, 0x74, 0x61, 0x74, 0x73, 0x22, 0x52, 0x0a, 0x11, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x65, 0x64, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xa2, 0xe6, 0x2a, 0x03, 0x18,
	0x80, 0x08, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x08, 0xb2, 0xe6, 0x2a, 0x04, 0x3e, 0x3d,
	0x20, 0x30, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xa6, 0x06, 0x0a,
	0x14, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x26, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xa2, 0xe6, 0x2a, 0x03, 0x18, 0x80, 0x08, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x09, 0x65, 0x78, 0x65,
	0x63, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x59,
	0x64, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x4d, 0x6f, 0x64,
	0x65, 0x52, 0x08, 0x65, 0x78, 0x65, 0x63, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0d,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3b, 0x0a,
	0x09, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x64, 0x48, 0x00,
	0x52, 0x08, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x0a, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x59, 0x64, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x0e, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xa2, 0xe6, 0x2a, 0x03, 0x18, 0x80, 0x08, 0x52, 0x0d, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x73, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x68, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x17, 0xa2, 0xe6, 0x2a, 0x07, 0x0a, 0x05, 0x08, 0x01, 0x10,
	0x80, 0x20, 0xaa, 0xe6, 0x2a, 0x08, 0x0a, 0x06, 0x0a, 0x04, 0x08, 0x01, 0x10, 0x64, 0x52, 0x0a,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x4e, 0x0a, 0x0f, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x59, 0x64, 0x62, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x4a, 0x04, 0x08, 0x0a, 0x10, 0x0b, 0x4a,
	0x04, 0x08, 0x0d, 0x10, 0x0e, 0x22, 0xcf, 0x04, 0x0a, 0x15, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x2a, 0x0a, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xa2, 0xe6, 0x2a, 0x03, 0x18, 0x80, 0x08, 0x52, 0x0b,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0b, 0x65,
	0x78, 0x65, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x3e, 0x0a, 0x0e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x59, 0x64,
	0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x52, 0x0d, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x49, 0x64, 0x52, 0x08, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x64, 0x12, 0x69,
	0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x42, 0x17, 0xa2, 0xe6, 0x2a, 0x07, 0x0a, 0x05, 0x08, 0x01, 0x10, 0x80,
	0x20, 0xaa, 0xe6, 0x2a, 0x08, 0x0a, 0x06, 0x0a, 0x04, 0x08, 0x01, 0x10, 0x64, 0x52, 0x0a, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x0f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0d, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x09, 0x65,
	0x78, 0x65, 0x63, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13,
	0x2e, 0x59, 0x64, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x4d,
	0x6f, 0x64, 0x65, 0x52, 0x08, 0x65, 0x78, 0x65, 0x63, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x39, 0x0a,
	0x0a, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x09, 0x65,
	0x78, 0x65, 0x63, 0x53, 0x74, 0x61, 0x74, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd0, 0x01, 0x0a, 0x19, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xa2, 0xe6, 0x2a,
	0x03, 0x18, 0x80, 0x08, 0x52, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x0b, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xa2, 0xe6, 0x2a, 0x03, 0x18, 0x80, 0x08, 0x48,
	0x00, 0x52, 0x0a, 0x66, 0x65, 0x74, 0x63, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x29, 0x0a,
	0x0b, 0x72, 0x6f, 0x77, 0x73, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x08, 0xb2, 0xe6, 0x2a, 0x04, 0x3e, 0x3d, 0x20, 0x30, 0x52, 0x0a, 0x72, 0x6f,
	0x77, 0x73, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x27, 0x0a, 0x0a, 0x72, 0x6f, 0x77, 0x73,
	0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x08, 0xb2, 0xe6,
	0x2a, 0x04, 0x3e, 0x3d, 0x20, 0x30, 0x52, 0x09, 0x72, 0x6f, 0x77, 0x73, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x42, 0x07, 0x0a, 0x05, 0x66, 0x65, 0x74, 0x63, 0x68, 0x22, 0x96, 0x02, 0x0a, 0x1a, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x59, 0x64, 0x62, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x06,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x59,
	0x64, 0x62, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x12, 0x32, 0x0a,
	0x10, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x08, 0xb2, 0xe6, 0x2a, 0x04, 0x3e, 0x3d, 0x20,
	0x30, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x2d, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x53, 0x65, 0x74, 0x52, 0x09, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x74,
	0x12, 0x31, 0x0a, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xa2, 0xe6, 0x2a, 0x03,
	0x18, 0x80, 0x08, 0x52, 0x0e, 0x6e, 0x65, 0x78, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x83, 0x01, 0x0a, 0x06, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x39,
	0x0a, 0x09, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x64, 0x52,
	0x08, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0e, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x0d, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x8e, 0x01, 0x0a, 0x11, 0x53, 0x61,
	0x76, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x39, 0x0a, 0x09, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x64,
	0x52, 0x08, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0e, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x0d, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xb3, 0x01, 0x0a, 0x12, 0x53,
	0x61, 0x76, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64,
	0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x09, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x49, 0x64, 0x52, 0x08, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x64,
	0x22, 0x63, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xa2, 0xe6, 0x2a, 0x03,
	0x18, 0x80, 0x08, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x25,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x08, 0xb2, 0xe6, 0x2a, 0x04, 0x3e, 0x3d, 0x20, 0x30, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xd7, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x59, 0x64, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x73, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2f, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x2e, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x73, 0x12, 0x2b, 0x0a, 0x07, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x07, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x12, 0x2f,
	0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xa2, 0xe6, 0x2a, 0x03, 0x18, 0x80, 0x08,
	0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x50, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x59, 0x64, 0x62, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x64, 0x52, 0x08, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49,
	0x64, 0x22, 0x7a, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x59, 0x64, 0x62, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x06,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x59,
	0x64, 0x62, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x2a, 0x62, 0x0a,
	0x0d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e,
	0x0a, 0x1a, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18,
	0x0a, 0x14, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x45, 0x53, 0x53,
	0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x42, 0x55, 0x53, 0x59, 0x10,
	0x02, 0x2a, 0x42, 0x0a, 0x06, 0x53, 0x79, 0x6e, 0x74, 0x61, 0x78, 0x12, 0x16, 0x0a, 0x12, 0x53,
	0x59, 0x4e, 0x54, 0x41, 0x58, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x59, 0x4e, 0x54, 0x41, 0x58, 0x5f, 0x59, 0x51,
	0x4c, 0x5f, 0x56, 0x31, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x59, 0x4e, 0x54, 0x41, 0x58,
	0x5f, 0x50, 0x47, 0x10, 0x02, 0x2a, 0x86, 0x01, 0x0a, 0x08, 0x45, 0x78, 0x65, 0x63, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x58, 0x45, 0x43, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x58, 0x45, 0x43, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x53, 0x45,
	0x10, 0x0a, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x58, 0x45, 0x43, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x45, 0x10, 0x14, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x58,
	0x45, 0x43, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x58, 0x50, 0x4c, 0x41, 0x49, 0x4e, 0x10,
	0x1e, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x58, 0x45, 0x43, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x45,
	0x58, 0x45, 0x43, 0x55, 0x54, 0x45, 0x10, 0x32, 0x22, 0x04, 0x08, 0x28, 0x10, 0x28, 0x2a, 0x7f,
	0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x53,
	0x54, 0x41, 0x54, 0x53, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x53,
	0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x0a, 0x12, 0x14, 0x0a, 0x10,
	0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x41, 0x53, 0x49, 0x43,
	0x10, 0x14, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x4d, 0x4f, 0x44, 0x45,
	0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0x1e, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x53,
	0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x28, 0x2a,
	0xaa, 0x01, 0x0a, 0x0a, 0x45, 0x78, 0x65, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b,
	0x0a, 0x17, 0x45, 0x58, 0x45, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x45,
	0x58, 0x45, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54,
	0x49, 0x4e, 0x47, 0x10, 0x0a, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x58, 0x45, 0x43, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x42, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x14, 0x12, 0x19,
	0x0a, 0x15, 0x45, 0x58, 0x45, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x41,
	0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x1e, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x58, 0x45,
	0x43, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54,
	0x45, 0x44, 0x10, 0x28, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x58, 0x45, 0x43, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x32, 0x42, 0x5f, 0x0a, 0x1a,
	0x74, 0x65, 0x63, 0x68, 0x2e, 0x79, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64,
	0x72, 0x61, 0x66, 0x74, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x64, 0x62, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2f, 0x79, 0x64, 0x62, 0x2d, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x72, 0x61, 0x66, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2f, 0x59, 0x64, 0x62, 0x5f, 0x51, 0x75, 0x65, 0x72, 0x79, 0xf8, 0x01, 0x01, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_draft_protos_ydb_query_proto_rawDescOnce sync.Once
	file_draft_protos_ydb_query_proto_rawDescData = file_draft_protos_ydb_query_proto_rawDesc
)

func file_draft_protos_ydb_query_proto_rawDescGZIP() []byte {
	file_draft_protos_ydb_query_proto_rawDescOnce.Do(func() {
		file_draft_protos_ydb_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_draft_protos_ydb_query_proto_rawDescData)
	})
	return file_draft_protos_ydb_query_proto_rawDescData
}

var file_draft_protos_ydb_query_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_draft_protos_ydb_query_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_draft_protos_ydb_query_proto_goTypes = []interface{}{
	(SessionStatus)(0),                     // 0: Ydb.Query.SessionStatus
	(Syntax)(0),                            // 1: Ydb.Query.Syntax
	(ExecMode)(0),                          // 2: Ydb.Query.ExecMode
	(StatsMode)(0),                         // 3: Ydb.Query.StatsMode
	(ExecStatus)(0),                        // 4: Ydb.Query.ExecStatus
	(*CreateSessionRequest)(nil),           // 5: Ydb.Query.CreateSessionRequest
	(*CreateSessionResponse)(nil),          // 6: Ydb.Query.CreateSessionResponse
	(*DeleteSessionRequest)(nil),           // 7: Ydb.Query.DeleteSessionRequest
	(*DeleteSessionResponse)(nil),          // 8: Ydb.Query.DeleteSessionResponse
	(*PingSessionRequest)(nil),             // 9: Ydb.Query.PingSessionRequest
	(*PingSessionResponse)(nil),            // 10: Ydb.Query.PingSessionResponse
	(*SerializableModeSettings)(nil),       // 11: Ydb.Query.SerializableModeSettings
	(*OnlineModeSettings)(nil),             // 12: Ydb.Query.OnlineModeSettings
	(*StaleModeSettings)(nil),              // 13: Ydb.Query.StaleModeSettings
	(*SnapshotModeSettings)(nil),           // 14: Ydb.Query.SnapshotModeSettings
	(*TransactionSettings)(nil),            // 15: Ydb.Query.TransactionSettings
	(*TransactionControl)(nil),             // 16: Ydb.Query.TransactionControl
	(*BeginTransactionRequest)(nil),        // 17: Ydb.Query.BeginTransactionRequest
	(*TransactionMeta)(nil),                // 18: Ydb.Query.TransactionMeta
	(*BeginTransactionResponse)(nil),       // 19: Ydb.Query.BeginTransactionResponse
	(*CommitTransactionRequest)(nil),       // 20: Ydb.Query.CommitTransactionRequest
	(*CommitTransactionResponse)(nil),      // 21: Ydb.Query.CommitTransactionResponse
	(*RollbackTransactionRequest)(nil),     // 22: Ydb.Query.RollbackTransactionRequest
	(*RollbackTransactionResponse)(nil),    // 23: Ydb.Query.RollbackTransactionResponse
	(*QueryContent)(nil),                   // 24: Ydb.Query.QueryContent
	(*ExecuteQueryRequest)(nil),            // 25: Ydb.Query.ExecuteQueryRequest
	(*ResultSetMeta)(nil),                  // 26: Ydb.Query.ResultSetMeta
	(*ExecuteQueryResponsePart)(nil),       // 27: Ydb.Query.ExecuteQueryResponsePart
	(*VersionedScriptId)(nil),              // 28: Ydb.Query.VersionedScriptId
	(*ExecuteScriptRequest)(nil),           // 29: Ydb.Query.ExecuteScriptRequest
	(*ExecuteScriptMetadata)(nil),          // 30: Ydb.Query.ExecuteScriptMetadata
	(*FetchScriptResultsRequest)(nil),      // 31: Ydb.Query.FetchScriptResultsRequest
	(*FetchScriptResultsResponse)(nil),     // 32: Ydb.Query.FetchScriptResultsResponse
	(*Script)(nil),                         // 33: Ydb.Query.Script
	(*SaveScriptRequest)(nil),              // 34: Ydb.Query.SaveScriptRequest
	(*SaveScriptResponse)(nil),             // 35: Ydb.Query.SaveScriptResponse
	(*ListScriptsRequest)(nil),             // 36: Ydb.Query.ListScriptsRequest
	(*ListScriptsResponse)(nil),            // 37: Ydb.Query.ListScriptsResponse
	(*DeleteScriptRequest)(nil),            // 38: Ydb.Query.DeleteScriptRequest
	(*DeleteScriptResponse)(nil),           // 39: Ydb.Query.DeleteScriptResponse
	nil,                                    // 40: Ydb.Query.ExecuteQueryRequest.ParametersEntry
	nil,                                    // 41: Ydb.Query.ExecuteScriptRequest.ParametersEntry
	nil,                                    // 42: Ydb.Query.ExecuteScriptRequest.AttributesEntry
	nil,                                    // 43: Ydb.Query.ExecuteScriptMetadata.AttributesEntry
	(Ydb.StatusIds_StatusCode)(0),          // 44: Ydb.StatusIds.StatusCode
	(*Ydb_Issue.IssueMessage)(nil),         // 45: Ydb.Issue.IssueMessage
	(*Ydb.Column)(nil),                     // 46: Ydb.Column
	(*Ydb.ResultSet)(nil),                  // 47: Ydb.ResultSet
	(*Ydb_TableStats.QueryStats)(nil),      // 48: Ydb.TableStats.QueryStats
	(*Ydb_Operations.OperationParams)(nil), // 49: Ydb.Operations.OperationParams
	(*Ydb.TypedValue)(nil),                 // 50: Ydb.TypedValue
}
var file_draft_protos_ydb_query_proto_depIdxs = []int32{
	44, // 0: Ydb.Query.CreateSessionResponse.status:type_name -> Ydb.StatusIds.StatusCode
	45, // 1: Ydb.Query.CreateSessionResponse.issues:type_name -> Ydb.Issue.IssueMessage
	44, // 2: Ydb.Query.DeleteSessionResponse.status:type_name -> Ydb.StatusIds.StatusCode
	45, // 3: Ydb.Query.DeleteSessionResponse.issues:type_name -> Ydb.Issue.IssueMessage
	44, // 4: Ydb.Query.PingSessionResponse.status:type_name -> Ydb.StatusIds.StatusCode
	45, // 5: Ydb.Query.PingSessionResponse.issues:type_name -> Ydb.Issue.IssueMessage
	0,  // 6: Ydb.Query.PingSessionResponse.session_status:type_name -> Ydb.Query.SessionStatus
	11, // 7: Ydb.Query.TransactionSettings.serializable_read_write:type_name -> Ydb.Query.SerializableModeSettings
	12, // 8: Ydb.Query.TransactionSettings.online_read_only:type_name -> Ydb.Query.OnlineModeSettings
	13, // 9: Ydb.Query.TransactionSettings.stale_read_only:type_name -> Ydb.Query.StaleModeSettings
	14, // 10: Ydb.Query.TransactionSettings.snapshot_read_only:type_name -> Ydb.Query.SnapshotModeSettings
	15, // 11: Ydb.Query.TransactionControl.begin_tx:type_name -> Ydb.Query.TransactionSettings
	15, // 12: Ydb.Query.BeginTransactionRequest.tx_settings:type_name -> Ydb.Query.TransactionSettings
	44, // 13: Ydb.Query.BeginTransactionResponse.status:type_name -> Ydb.StatusIds.StatusCode
	45, // 14: Ydb.Query.BeginTransactionResponse.issues:type_name -> Ydb.Issue.IssueMessage
	18, // 15: Ydb.Query.BeginTransactionResponse.tx_meta:type_name -> Ydb.Query.TransactionMeta
	44, // 16: Ydb.Query.CommitTransactionResponse.status:type_name -> Ydb.StatusIds.StatusCode
	45, // 17: Ydb.Query.CommitTransactionResponse.issues:type_name -> Ydb.Issue.IssueMessage
	44, // 18: Ydb.Query.RollbackTransactionResponse.status:type_name -> Ydb.StatusIds.StatusCode
	45, // 19: Ydb.Query.RollbackTransactionResponse.issues:type_name -> Ydb.Issue.IssueMessage
	1,  // 20: Ydb.Query.QueryContent.syntax:type_name -> Ydb.Query.Syntax
	2,  // 21: Ydb.Query.ExecuteQueryRequest.exec_mode:type_name -> Ydb.Query.ExecMode
	16, // 22: Ydb.Query.ExecuteQueryRequest.tx_control:type_name -> Ydb.Query.TransactionControl
	24, // 23: Ydb.Query.ExecuteQueryRequest.query_content:type_name -> Ydb.Query.QueryContent
	40, // 24: Ydb.Query.ExecuteQueryRequest.parameters:type_name -> Ydb.Query.ExecuteQueryRequest.ParametersEntry
	3,  // 25: Ydb.Query.ExecuteQueryRequest.stats_mode:type_name -> Ydb.Query.StatsMode
	46, // 26: Ydb.Query.ResultSetMeta.columns:type_name -> Ydb.Column
	44, // 27: Ydb.Query.ExecuteQueryResponsePart.status:type_name -> Ydb.StatusIds.StatusCode
	45, // 28: Ydb.Query.ExecuteQueryResponsePart.issues:type_name -> Ydb.Issue.IssueMessage
	47, // 29: Ydb.Query.ExecuteQueryResponsePart.result_set:type_name -> Ydb.ResultSet
	18, // 30: Ydb.Query.ExecuteQueryResponsePart.tx_meta:type_name -> Ydb.Query.TransactionMeta
	26, // 31: Ydb.Query.ExecuteQueryResponsePart.result_sets_meta:type_name -> Ydb.Query.ResultSetMeta
	48, // 32: Ydb.Query.ExecuteQueryResponsePart.exec_stats:type_name -> Ydb.TableStats.QueryStats
	49, // 33: Ydb.Query.ExecuteScriptRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	2,  // 34: Ydb.Query.ExecuteScriptRequest.exec_mode:type_name -> Ydb.Query.ExecMode
	24, // 35: Ydb.Query.ExecuteScriptRequest.script_content:type_name -> Ydb.Query.QueryContent
	28, // 36: Ydb.Query.ExecuteScriptRequest.script_id:type_name -> Ydb.Query.VersionedScriptId
	41, // 37: Ydb.Query.ExecuteScriptRequest.parameters:type_name -> Ydb.Query.ExecuteScriptRequest.ParametersEntry
	3,  // 38: Ydb.Query.ExecuteScriptRequest.stats_mode:type_name -> Ydb.Query.StatsMode
	42, // 39: Ydb.Query.ExecuteScriptRequest.attributes:type_name -> Ydb.Query.ExecuteScriptRequest.AttributesEntry
	4,  // 40: Ydb.Query.ExecuteScriptMetadata.exec_status:type_name -> Ydb.Query.ExecStatus
	24, // 41: Ydb.Query.ExecuteScriptMetadata.script_content:type_name -> Ydb.Query.QueryContent
	28, // 42: Ydb.Query.ExecuteScriptMetadata.script_id:type_name -> Ydb.Query.VersionedScriptId
	43, // 43: Ydb.Query.ExecuteScriptMetadata.attributes:type_name -> Ydb.Query.ExecuteScriptMetadata.AttributesEntry
	26, // 44: Ydb.Query.ExecuteScriptMetadata.result_set_meta:type_name -> Ydb.Query.ResultSetMeta
	2,  // 45: Ydb.Query.ExecuteScriptMetadata.exec_mode:type_name -> Ydb.Query.ExecMode
	48, // 46: Ydb.Query.ExecuteScriptMetadata.exec_stats:type_name -> Ydb.TableStats.QueryStats
	44, // 47: Ydb.Query.FetchScriptResultsResponse.status:type_name -> Ydb.StatusIds.StatusCode
	45, // 48: Ydb.Query.FetchScriptResultsResponse.issues:type_name -> Ydb.Issue.IssueMessage
	47, // 49: Ydb.Query.FetchScriptResultsResponse.result_set:type_name -> Ydb.ResultSet
	28, // 50: Ydb.Query.Script.script_id:type_name -> Ydb.Query.VersionedScriptId
	24, // 51: Ydb.Query.Script.script_content:type_name -> Ydb.Query.QueryContent
	28, // 52: Ydb.Query.SaveScriptRequest.script_id:type_name -> Ydb.Query.VersionedScriptId
	24, // 53: Ydb.Query.SaveScriptRequest.script_content:type_name -> Ydb.Query.QueryContent
	44, // 54: Ydb.Query.SaveScriptResponse.status:type_name -> Ydb.StatusIds.StatusCode
	45, // 55: Ydb.Query.SaveScriptResponse.issues:type_name -> Ydb.Issue.IssueMessage
	28, // 56: Ydb.Query.SaveScriptResponse.script_id:type_name -> Ydb.Query.VersionedScriptId
	44, // 57: Ydb.Query.ListScriptsResponse.status:type_name -> Ydb.StatusIds.StatusCode
	45, // 58: Ydb.Query.ListScriptsResponse.issues:type_name -> Ydb.Issue.IssueMessage
	33, // 59: Ydb.Query.ListScriptsResponse.scripts:type_name -> Ydb.Query.Script
	28, // 60: Ydb.Query.DeleteScriptRequest.script_id:type_name -> Ydb.Query.VersionedScriptId
	44, // 61: Ydb.Query.DeleteScriptResponse.status:type_name -> Ydb.StatusIds.StatusCode
	45, // 62: Ydb.Query.DeleteScriptResponse.issues:type_name -> Ydb.Issue.IssueMessage
	50, // 63: Ydb.Query.ExecuteQueryRequest.ParametersEntry.value:type_name -> Ydb.TypedValue
	50, // 64: Ydb.Query.ExecuteScriptRequest.ParametersEntry.value:type_name -> Ydb.TypedValue
	65, // [65:65] is the sub-list for method output_type
	65, // [65:65] is the sub-list for method input_type
	65, // [65:65] is the sub-list for extension type_name
	65, // [65:65] is the sub-list for extension extendee
	0,  // [0:65] is the sub-list for field type_name
}

func init() { file_draft_protos_ydb_query_proto_init() }
func file_draft_protos_ydb_query_proto_init() {
	if File_draft_protos_ydb_query_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_draft_protos_ydb_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SerializableModeSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineModeSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaleModeSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotModeSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeginTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeginTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RollbackTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RollbackTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultSetMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteQueryResponsePart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionedScriptId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteScriptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteScriptMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchScriptResultsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchScriptResultsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Script); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveScriptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveScriptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListScriptsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListScriptsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteScriptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_query_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteScriptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_draft_protos_ydb_query_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*TransactionSettings_SerializableReadWrite)(nil),
		(*TransactionSettings_OnlineReadOnly)(nil),
		(*TransactionSettings_StaleReadOnly)(nil),
		(*TransactionSettings_SnapshotReadOnly)(nil),
	}
	file_draft_protos_ydb_query_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*TransactionControl_TxId)(nil),
		(*TransactionControl_BeginTx)(nil),
	}
	file_draft_protos_ydb_query_proto_msgTypes[20].OneofWrappers = []interface{}{
		(*ExecuteQueryRequest_QueryContent)(nil),
	}
	file_draft_protos_ydb_query_proto_msgTypes[24].OneofWrappers = []interface{}{
		(*ExecuteScriptRequest_ScriptContent)(nil),
		(*ExecuteScriptRequest_ScriptId)(nil),
	}
	file_draft_protos_ydb_query_proto_msgTypes[26].OneofWrappers = []interface{}{
		(*FetchScriptResultsRequest_FetchToken)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_draft_protos_ydb_query_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_draft_protos_ydb_query_proto_goTypes,
		DependencyIndexes: file_draft_protos_ydb_query_proto_depIdxs,
		EnumInfos:         file_draft_protos_ydb_query_proto_enumTypes,
		MessageInfos:      file_draft_protos_ydb_query_proto_msgTypes,
	}.Build()
	File_draft_protos_ydb_query_proto = out.File
	file_draft_protos_ydb_query_proto_rawDesc = nil
	file_draft_protos_ydb_query_proto_goTypes = nil
	file_draft_protos_ydb_query_proto_depIdxs = nil
}
